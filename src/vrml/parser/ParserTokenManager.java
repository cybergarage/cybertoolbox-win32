/* Generated By:JavaCC: Do not edit this line. ParserTokenManager.java */
package vrml.parser;
import java.io.*;
import vrml.*;
import vrml.field.*;
import vrml.node.*;
import vrml.linkedlist.*;
import vrml.route.*;

public class ParserTokenManager implements ParserConstants
{
  protected static final String jjadd_escapes(String str) {
    String retval = "";
    char ch;
    for (int i = 0; i < str.length(); i++) {
      if ((ch = str.charAt(i)) == 0) continue;
      if (ch == '\b') {
        retval += "\\b";
      } else if (ch == '\t') {
        retval += "\\t";
      } else if (ch == '\n') {
        retval += "\\n";
      } else if (ch == '\f') {
        retval += "\\f";
      } else if (ch == '\r') {
        retval += "\\r";
      } else if (ch == '\"') {
        retval += "\\\"";
      } else if (ch == '\'') {
        retval += "\\\'";
      } else if (ch == '\\') {
        retval += "\\\\";
      } else if (ch < 0x20 || ch > 0x7e) {
        String s = "0000" + Integer.toString(ch, 16);
        retval += "\\u" + s.substring(s.length() - 4, s.length());
      } else {
        retval += ch;
      }
    }
    return retval;
  }

static final long[] jjbitVec0 = { 0x1L, 0x0L,
              0xffffffffffffffffL, 0xffffffffffffffffL };
static private final void jjMoveNfa_0(int[] oldStates, int[] newStates)
{
   int j, k;
   MainLoop :
   for (;;)
   {
      if (curChar < 64)
      {
         int i = jjnewStateCnt;
         jjnewStateCnt = 0;
         jjround++;
         long l = 1L << curChar;
         do
         {
            switch(oldStates[--i])
            {
               case 0:
                  if ((0x800000000L & l) != 0L)
                  {
                     jjnextStates = jjstates1;
                     break;
                  }
                  else continue;
               case 1:
                  if ((0xffffffffffffdbffL & l) != 0L)
                  {
                     jjnextStates = jjstates1;
                     break;
                  }
                  else continue;
               case 2:
                  if ((0x400L & l) != 0L)
                  {
                     if (jjcurKind > 5)
                        jjcurKind = 5;
                     return;
                  }
                  else continue;
               case 3:
                  if ((0x2000L & l) != 0L)
                  {
                     jjnextStates = jjstates0;
                     break MainLoop;;
                  }
                  else continue;
               case 25:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (jjcurKind > 222)
                        jjcurKind = 222;
                     jjnextStates = jjstates15;
                     break;
                  }
                  else continue;
               case 5:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (jjcurKind > 223)
                        jjcurKind = 223;
                     newStates[jjnewStateCnt + 0] = 5;
                     jjnewStateCnt += 1;
                     continue;
                  }
                  else continue;
               case 6:
                  if ((0x400000000L & l) != 0L)
                  {
                     jjnextStates = jjstates3;
                     break;
                  }
                  else continue;
               case 7:
                  if ((0xfffffffbffffdbffL & l) != 0L)
                  {
                     jjnextStates = jjstates3;
                     break;
                  }
                  else continue;
               case 9:
                  if ((0x8400000000L & l) != 0L)
                  {
                     jjnextStates = jjstates3;
                     break;
                  }
                  else continue;
               case 11:
                  if ((0xff000000000000L & l) != 0L)
                  {
                     jjnextStates = jjstates4;
                     break;
                  }
                  else continue;
               case 12:
                  if ((0xff000000000000L & l) != 0L)
                  {
                     jjnextStates = jjstates3;
                     break;
                  }
                  else continue;
               case 13:
                  if ((0xf000000000000L & l) != 0L)
                  {
                     newStates[jjnewStateCnt + 0] = 14;
                     jjnewStateCnt += 1;
                     continue;
                  }
                  else continue;
               case 14:
                  if ((0xff000000000000L & l) != 0L)
                  {
                     jjnextStates = jjstates5;
                     break;
                  }
                  else continue;
               case 10:
                  if ((0x400000000L & l) != 0L)
                  {
                     if (jjcurKind > 224)
                        jjcurKind = 224;
                     continue;
                  }
                  else continue;
               case 26:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     jjnextStates = jjstates20;
                     break;
                  }
                  else continue;
               case 27:
                  if ((0x400000000000L & l) != 0L)
                  {
                     if (jjcurKind > 225)
                        jjcurKind = 225;
                     jjnextStates = jjstates19;
                     break;
                  }
                  else continue;
               case 28:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (jjcurKind > 225)
                        jjcurKind = 225;
                     jjnextStates = jjstates19;
                     break;
                  }
                  else continue;
               case 30:
                  if ((0x280000000000L & l) != 0L)
                  {
                     jjnextStates = jjstates17;
                     break;
                  }
                  else continue;
               case 31:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (jjcurKind > 225)
                        jjcurKind = 225;
                     jjnextStates = jjstates16;
                     break;
                  }
                  else continue;
               case 15:
                  if ((0x400000000000L & l) != 0L)
                  {
                     jjnextStates = jjstates12;
                     break;
                  }
                  else continue;
               case 16:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (jjcurKind > 225)
                        jjcurKind = 225;
                     jjnextStates = jjstates11;
                     break;
                  }
                  else continue;
               case 18:
                  if ((0x280000000000L & l) != 0L)
                  {
                     jjnextStates = jjstates9;
                     break;
                  }
                  else continue;
               case 19:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (jjcurKind > 225)
                        jjcurKind = 225;
                     jjnextStates = jjstates8;
                     break;
                  }
                  else continue;
               case 32:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (jjcurKind > 225)
                        jjcurKind = 225;
                     jjnextStates = jjstates24;
                     break;
                  }
                  else continue;
               case 34:
                  if ((0x280000000000L & l) != 0L)
                  {
                     jjnextStates = jjstates22;
                     break;
                  }
                  else continue;
               case 35:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (jjcurKind > 225)
                        jjcurKind = 225;
                     jjnextStates = jjstates21;
                     break;
                  }
                  else continue;
               case 22:
                  if ((0x280000000000L & l) != 0L)
                  {
                     jjnextStates = jjstates13;
                     break;
                  }
                  else continue;
               case 23:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (jjcurKind > 226)
                        jjcurKind = 226;
                     jjnextStates = jjstates13;
                     break;
                  }
                  else continue;
               case 24:
                  if ((0x280000000000L & l) != 0L)
                  {
                     jjnextStates = jjstates25;
                     break;
                  }
                  else continue;
               case 36:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (jjcurKind > 222)
                        jjcurKind = 222;
                     jjnextStates = jjstates26;
                     break;
                  }
                  else continue;
               default : continue;
            }
            j = jjnextStates.length;
            do
            {
               if (jjrounds[k = jjnextStates[--j]] != jjround)
               {
                  jjrounds[k] = jjround;
                  newStates[jjnewStateCnt++] = k;
               }
            } while (j != 0);
         } while(i != 0);
      }
      else if (curChar < 128)
      {
         int i = jjnewStateCnt;
         jjnewStateCnt = 0;
         jjround++;
         long l = 1L << (curChar & 077);
         do
         {
            switch(oldStates[--i])
            {
               case 1:
                     newStates[jjnewStateCnt + 0] = 1;
                     newStates[jjnewStateCnt + 1] = 2;
                     newStates[jjnewStateCnt + 2] = 3;
                     jjnewStateCnt += 3;
                     continue;
               case 4:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (jjcurKind > 223)
                        jjcurKind = 223;
                     jjnextStates = jjstates2;
                     break;
                  }
                  else continue;
               case 5:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (jjcurKind > 223)
                        jjcurKind = 223;
                     jjnextStates = jjstates2;
                     break;
                  }
                  else continue;
               case 7:
                  if ((0xffffffffefffffffL & l) != 0L)
                  {
                     jjnextStates = jjstates3;
                     break;
                  }
                  else continue;
               case 8:
                  if ((0x10000000L & l) != 0L)
                  {
                     newStates[jjnewStateCnt + 0] = 9;
                     newStates[jjnewStateCnt + 1] = 11;
                     newStates[jjnewStateCnt + 2] = 13;
                     jjnewStateCnt += 3;
                     continue;
                  }
                  else continue;
               case 9:
                  if ((0x14404410000000L & l) != 0L)
                  {
                     jjnextStates = jjstates3;
                     break;
                  }
                  else continue;
               case 29:
                  if ((0x2000000020L & l) != 0L)
                  {
                     newStates[jjnewStateCnt + 0] = 30;
                     newStates[jjnewStateCnt + 1] = 31;
                     jjnewStateCnt += 2;
                     continue;
                  }
                  else continue;
               case 17:
                  if ((0x2000000020L & l) != 0L)
                  {
                     newStates[jjnewStateCnt + 0] = 18;
                     newStates[jjnewStateCnt + 1] = 19;
                     jjnewStateCnt += 2;
                     continue;
                  }
                  else continue;
               case 20:
                  if ((0x5000000050L & l) != 0L)
                  {
                     if (jjcurKind > 225)
                        jjcurKind = 225;
                     continue;
                  }
                  else continue;
               case 33:
                  if ((0x2000000020L & l) != 0L)
                  {
                     newStates[jjnewStateCnt + 0] = 34;
                     newStates[jjnewStateCnt + 1] = 35;
                     jjnewStateCnt += 2;
                     continue;
                  }
                  else continue;
               case 21:
                  if ((0x2000000020L & l) != 0L)
                  {
                     newStates[jjnewStateCnt + 0] = 22;
                     newStates[jjnewStateCnt + 1] = 23;
                     jjnewStateCnt += 2;
                     continue;
                  }
                  else continue;
               default : continue;
            }
            j = jjnextStates.length;
            do
            {
               if (jjrounds[k = jjnextStates[--j]] != jjround)
               {
                  jjrounds[k] = jjround;
                  newStates[jjnewStateCnt++] = k;
               }
            } while (j != 0);
         } while(i != 0);
      }
      else
      {
         int i = jjnewStateCnt;
         jjnewStateCnt = 0;
         jjround++;
         int i2 = (curChar & 0xff) >> 6;
         int i1 = ((curChar >> 8) & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         long l1 = 1L << ((curChar >> 8) & 077);
         Outer:
         do
         {
            switch(oldStates[--i])
            {
               case 1:
                  MatchLoop:
                  for(;;)
                  {
                     switch((curChar >> 8))
                     {
                        case 0:
                           if ((jjbitVec0[i2] & l2) == 0L)
                              continue Outer;
                           break MatchLoop;
                        default : break;
                     }
                     continue Outer;
                  }
                     newStates[jjnewStateCnt + 0] = 1;
                     newStates[jjnewStateCnt + 1] = 2;
                     newStates[jjnewStateCnt + 2] = 3;
                     jjnewStateCnt += 3;
                     continue;
               case 7:
                  MatchLoop:
                  for(;;)
                  {
                     switch((curChar >> 8))
                     {
                        case 0:
                           if ((jjbitVec0[i2] & l2) == 0L)
                              continue Outer;
                           break MatchLoop;
                        default : break;
                     }
                     continue Outer;
                  }
                     newStates[jjnewStateCnt + 0] = 7;
                     newStates[jjnewStateCnt + 1] = 8;
                     newStates[jjnewStateCnt + 2] = 10;
                     jjnewStateCnt += 3;
                     continue;
               default : continue;
            }
         } while(i != 0);
      }
      return;
   }
   j = jjnextStates.length;
   do
   {
      if (jjrounds[k = jjnextStates[--j]] != jjround)
      {
         jjrounds[k] = jjround;
         newStates[jjnewStateCnt++] = k;
      }
   } while (j != 0);
}
static int[] StopStringLiteralDfa_0(int pos, long active0, long active1, long active2, long active3)
{
   switch (pos)
   {
      case 0:
         if ((active1 & 0xa008040L) != 0L || (active2 & 0x60000001L) != 0L)
         {
            matchedToken.kind = 223;
            return jjstates34;
         }
         if ((active0 & 0xfffffffffe7ef1c0L) != 0L || (active1 & 0xfffffffff5ff7fbfL) != 0L || (active2 & 0xffffffff9ffffffeL) != 0L || (active3 & 0x3fffffffL) != 0L)
         {
            matchedToken.kind = 223;
            return jjstates2;
         }
         if ((active0 & 0x10000L) != 0L)
            return jjstates12;
         return null;
      case 1:
         if ((active0 & 0x8000L) != 0L || (active1 & 0x800L) != 0L)
            return jjstates2;
         if ((active0 & 0xfffffffffe7e71c0L) != 0L || (active1 & 0xfffffffffffff7ffL) != 0L || (active2 & 0xffffffffffffffffL) != 0L || (active3 & 0x3fffffffL) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               matchedToken.kind = 223;
               jjmatchedPos = 1;
            }
            return jjstates2;
         }
         return null;
      case 2:
         if ((active0 & 0x3fff7efffe7a41c0L) != 0L || (active1 & 0xfdffff7fbffef7fdL) != 0L || (active2 & 0xffffffffffffffffL) != 0L || (active3 & 0x3fffffffL) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               matchedToken.kind = 223;
               jjmatchedPos = 2;
            }
            return jjstates2;
         }
         if ((active0 & 0xc000810000043000L) != 0L || (active1 & 0x200008040010002L) != 0L)
            return jjstates2;
         return null;
      case 3:
         if ((active0 & 0xbdbe7fffbe7a4140L) != 0L || (active1 & 0xfdffffffbffef7fdL) != 0L || (active2 & 0xfffffffffffffeffL) != 0L || (active3 & 0x1dffe7bfL) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               matchedToken.kind = 223;
               jjmatchedPos = 3;
            }
            return jjstates2;
         }
         if ((active0 & 0x241000040000080L) != 0L || (active2 & 0x100L) != 0L || (active3 & 0x22001840L) != 0L)
            return jjstates2;
         return null;
      case 4:
         if ((active0 & 0xad867fff3e7a0040L) != 0L || (active1 & 0xe5f37bef9fecf7fdL) != 0L || (active2 & 0xfff7ffff7fff7eefL) != 0L || (active3 & 0xcf3ffbeL) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               matchedToken.kind = 223;
               jjmatchedPos = 4;
            }
            return jjstates2;
         }
         if ((active0 & 0x1038000080004100L) != 0L || (active1 & 0x180c841020120000L) != 0L || (active2 & 0x8000080008010L) != 0L || (active3 & 0x110c0001L) != 0L)
            return jjstates2;
         return null;
      case 5:
         if ((active0 & 0xa8267eef3e780040L) != 0L || (active1 & 0xe09e7be797e6f6f9L) != 0L || (active2 & 0xe3f6df6e7bff62efL) != 0L || (active3 & 0xdfbfe16L) != 0L)
         {
            if (jjmatchedPos != 5)
            {
               matchedToken.kind = 223;
               jjmatchedPos = 5;
            }
            return jjstates2;
         }
         if ((active0 & 0x580011000020000L) != 0L || (active1 & 0x561000808080104L) != 0L || (active2 & 0x1c01209104001c00L) != 0L || (active3 & 0x1a8L) != 0L)
            return jjstates2;
         return null;
      case 6:
         if ((active0 & 0x4004818000000L) != 0L || (active1 & 0x320480000040L) != 0L || (active2 & 0x661f0e20000000L) != 0L)
            return jjstates2;
         if ((active0 & 0xa9227eb726780040L) != 0L || (active1 & 0xe0be49e317eef6b9L) != 0L || (active2 & 0xf390c0605bff72efL) != 0L || (active3 & 0xdfbfe16L) != 0L)
         {
            if (jjmatchedPos != 6)
            {
               matchedToken.kind = 223;
               jjmatchedPos = 6;
            }
            return jjstates2;
         }
         return null;
      case 7:
         if ((active0 & 0x800014a204400040L) != 0L || (active1 & 0x2012010005400039L) != 0L || (active2 & 0x380804040500000L) != 0L || (active3 & 0x420004L) != 0L)
            return jjstates2;
         if ((active0 & 0x29226a152a380000L) != 0L || (active1 & 0xc0ac48e312aef680L) != 0L || (active2 & 0xf01040201baf72efL) != 0L || (active3 & 0xdb9fe12L) != 0L)
         {
            if (jjmatchedPos != 7)
            {
               matchedToken.kind = 223;
               jjmatchedPos = 7;
            }
            return jjstates2;
         }
         return null;
      case 8:
         if ((active0 & 0x2201120080000L) != 0L || (active1 & 0x202005080L) != 0L || (active2 & 0x6000000000000082L) != 0L || (active3 & 0x8210600L) != 0L)
            return jjstates2;
         if ((active0 & 0x29204a040a300000L) != 0L || (active1 & 0xc0bc48e110aea608L) != 0L || (active2 & 0x901040201baf726dL) != 0L || (active3 & 0x598f812L) != 0L)
         {
            if (jjmatchedPos != 8)
            {
               matchedToken.kind = 223;
               jjmatchedPos = 8;
            }
            return jjstates2;
         }
         return null;
      case 9:
         if ((active0 & 0x1204a0008100000L) != 0L || (active1 & 0xc0b048c1100ea408L) != 0L || (active2 & 0x900000001ba7722dL) != 0L || (active3 & 0x598d810L) != 0L)
         {
            if (jjmatchedPos != 9)
            {
               matchedToken.kind = 223;
               jjmatchedPos = 9;
            }
            return jjstates2;
         }
         if ((active0 & 0x2800000402200000L) != 0L || (active1 & 0xc002000a00200L) != 0L || (active2 & 0x10402000080040L) != 0L || (active3 & 0x2002L) != 0L)
            return jjstates2;
         return null;
      case 10:
         if ((active0 & 0xa0000100000L) != 0L || (active1 & 0x2000c000040000L) != 0L || (active2 & 0x8000000000270000L) != 0L || (active3 & 0x1908010L) != 0L)
            return jjstates2;
         if ((active0 & 0x2120400008000000L) != 0L || (active1 & 0xc0904801100aa408L) != 0L || (active2 & 0x100000001b80722dL) != 0L || (active3 & 0x4085800L) != 0L)
         {
            if (jjmatchedPos != 10)
            {
               matchedToken.kind = 223;
               jjmatchedPos = 10;
            }
            return jjstates2;
         }
         return null;
      case 11:
         if ((active0 & 0x2020400008000000L) != 0L || (active1 & 0x80904001000aa408L) != 0L || (active2 & 0x3803221L) != 0L || (active3 & 0x4085800L) != 0L)
         {
            if (jjmatchedPos != 11)
            {
               matchedToken.kind = 223;
               jjmatchedPos = 11;
            }
            return jjstates2;
         }
         if ((active0 & 0x100000000000000L) != 0L || (active1 & 0x4000080010000000L) != 0L || (active2 & 0x100000001800400cL) != 0L)
            return jjstates2;
         return null;
      case 12:
         if ((active1 & 0x8010000000008000L) != 0L || (active2 & 0x1L) != 0L || (active3 & 0x4000L) != 0L)
            return jjstates2;
         if ((active0 & 0x2020400008000000L) != 0L || (active1 & 0x804001000a2408L) != 0L || (active2 & 0x3803220L) != 0L || (active3 & 0x4081800L) != 0L)
         {
            if (jjmatchedPos != 12)
            {
               matchedToken.kind = 223;
               jjmatchedPos = 12;
            }
            return jjstates2;
         }
         return null;
      case 13:
         if ((active0 & 0x400000000000L) != 0L || (active1 & 0x80400000020008L) != 0L || (active2 & 0x20L) != 0L)
            return jjstates2;
         if ((active0 & 0x2020000008000000L) != 0L || (active1 & 0x100082400L) != 0L || (active2 & 0x3803200L) != 0L || (active3 & 0x4081800L) != 0L)
         {
            if (jjmatchedPos != 13)
            {
               matchedToken.kind = 223;
               jjmatchedPos = 13;
            }
            return jjstates2;
         }
         return null;
      case 14:
         if ((active0 & 0x2020000008000000L) != 0L || (active1 & 0x2400L) != 0L || (active2 & 0x2803000L) != 0L || (active3 & 0x4081800L) != 0L)
         {
            if (jjmatchedPos != 14)
            {
               matchedToken.kind = 223;
               jjmatchedPos = 14;
            }
            return jjstates2;
         }
         if ((active1 & 0x100080000L) != 0L || (active2 & 0x1000200L) != 0L)
            return jjstates2;
         return null;
      case 15:
         if ((active0 & 0x8000000L) != 0L || (active1 & 0x2400L) != 0L || (active3 & 0x4081000L) != 0L)
            return jjstates2;
         if ((active0 & 0x2020000000000000L) != 0L || (active2 & 0x2803000L) != 0L || (active3 & 0x800L) != 0L)
         {
            if (jjmatchedPos != 15)
            {
               matchedToken.kind = 223;
               jjmatchedPos = 15;
            }
            return jjstates2;
         }
         return null;
      case 16:
         if ((active0 & 0x2000000000000000L) != 0L || (active2 & 0x2803000L) != 0L)
         {
            if (jjmatchedPos != 16)
            {
               matchedToken.kind = 223;
               jjmatchedPos = 16;
            }
            return jjstates2;
         }
         if ((active0 & 0x20000000000000L) != 0L || (active3 & 0x800L) != 0L)
            return jjstates2;
         return null;
      case 17:
         if ((active0 & 0x2000000000000000L) != 0L || (active2 & 0x802000L) != 0L)
         {
            if (jjmatchedPos != 17)
            {
               matchedToken.kind = 223;
               jjmatchedPos = 17;
            }
            return jjstates2;
         }
         if ((active2 & 0x2001000L) != 0L)
            return jjstates2;
         return null;
      case 18:
         if ((active0 & 0x2000000000000000L) != 0L || (active2 & 0x802000L) != 0L)
         {
            if (jjmatchedPos != 18)
            {
               matchedToken.kind = 223;
               jjmatchedPos = 18;
            }
            return jjstates2;
         }
         return null;
      case 19:
         if ((active0 & 0x2000000000000000L) != 0L || (active2 & 0x2000L) != 0L)
         {
            if (jjmatchedPos != 19)
            {
               matchedToken.kind = 223;
               jjmatchedPos = 19;
            }
            return jjstates2;
         }
         if ((active2 & 0x800000L) != 0L)
            return jjstates2;
         return null;
      case 20:
         if ((active0 & 0x2000000000000000L) != 0L || (active2 & 0x2000L) != 0L)
         {
            if (jjmatchedPos != 20)
            {
               matchedToken.kind = 223;
               jjmatchedPos = 20;
            }
            return jjstates2;
         }
         return null;
      case 21:
         if ((active2 & 0x2000L) != 0L)
         {
            if (jjmatchedPos != 21)
            {
               matchedToken.kind = 223;
               jjmatchedPos = 21;
            }
            return jjstates2;
         }
         if ((active0 & 0x2000000000000000L) != 0L)
            return jjstates2;
         return null;
      case 22:
         if ((active2 & 0x2000L) != 0L)
            return jjstates2;
         return null;
      default : 
         return null;
   }
}
static void jjStartNfa_0(int pos, long active0, long active1, long active2, long active3)
{
   if ((jjstartStateSet = StopStringLiteralDfa_0(pos, active0, active1, active2, active3)) != null)
   {
      jjnewStateCnt = jjstartStateSet.length;
      jjMoveNfa_0(jjstartStateSet, jjstateSet2);
      if (jjcurKind != 2147483647)
      {
         matchedToken.kind = jjcurKind;
         jjmatchedPos = pos + 1;
         jjcurKind = 2147483647;
      }
   }
   return;
}
static long jjnewActive_00 = 0L, jjoldActive_00 = 0L,
            jjnewActive_01 = 0L, jjoldActive_01 = 0L,
            jjnewActive_02 = 0L, jjoldActive_02 = 0L,
            jjnewActive_03 = 0L, jjoldActive_03 = 0L;
static private final void jjMoveStringLiteralDfa0_0() throws java.io.IOException
{
   ReturnLoop:
   for (;;)
   {
    MainLoop:
    for (;;)
    {
         switch(curChar)
         {
            case 100: 
               jjoldActive_00 = 0x100000L;
               jjoldActive_01 = 0x4000000000004080L;
               jjoldActive_02 = 0x8000000L;
               jjoldActive_03 = 0L;
               break;
            case 99: 
               jjoldActive_00 = 0x14000000000040L;
               jjoldActive_01 = 0x44c800010070000L;
               jjoldActive_02 = 0x8000000000000000L;
               jjoldActive_03 = 0x4020L;
               break;
            case 98: 
               jjoldActive_00 = 0x500001800600000L;
               jjoldActive_01 = 0x4000000L;
               jjoldActive_02 = 0x4000000000000000L;
               jjoldActive_03 = 0L;
               break;
            case 97: 
               jjoldActive_00 = 0x400000000000L;
               jjoldActive_01 = 0x2200L;
               jjoldActive_02 = 0x200040L;
               jjoldActive_03 = 0x2L;
               break;
            case 93: 
               matchedToken.kind = 11;
               break ReturnLoop;
            case 91: 
               matchedToken.kind = 9;
               break ReturnLoop;
            case 87: 
               jjoldActive_00 = 0L;
               jjoldActive_01 = 0L;
               jjoldActive_02 = 0L;
               jjoldActive_03 = 0x8000000L;
               break;
            case 86: 
               jjoldActive_00 = 0L;
               jjoldActive_01 = 0L;
               jjoldActive_02 = 0L;
               jjoldActive_03 = 0x4200000L;
               break;
            case 85: 
               jjoldActive_00 = 0x2000L;
               jjoldActive_01 = 0L;
               jjoldActive_02 = 0L;
               jjoldActive_03 = 0L;
               break;
            case 84: 
               jjoldActive_00 = 0x8080L;
               jjoldActive_01 = 0L;
               jjoldActive_02 = 0L;
               jjoldActive_03 = 0x1b840L;
               break;
            case 83: 
               jjoldActive_00 = 0L;
               jjoldActive_01 = 0L;
               jjoldActive_02 = 0x380803ff06000000L;
               jjoldActive_03 = 0x9L;
               break;
            case 82: 
               jjoldActive_00 = 0x4000L;
               jjoldActive_01 = 0L;
               jjoldActive_02 = 0L;
               jjoldActive_03 = 0L;
               break;
            case 80: 
               jjoldActive_00 = 0L;
               jjoldActive_01 = 0L;
               jjoldActive_02 = 0x1c94000L;
               jjoldActive_03 = 0L;
               break;
            case 79: 
               jjoldActive_00 = 0L;
               jjoldActive_01 = 0L;
               jjoldActive_02 = 0x2000L;
               jjoldActive_03 = 0L;
               break;
            case 78: 
               jjoldActive_00 = 0L;
               jjoldActive_01 = 0L;
               jjoldActive_02 = 0x1420L;
               jjoldActive_03 = 0L;
               break;
            case 77: 
               jjoldActive_00 = 0L;
               jjoldActive_01 = 0x2000000000000000L;
               jjoldActive_02 = 0x7fc0000000008L;
               jjoldActive_03 = 0L;
               break;
            case 76: 
               jjoldActive_00 = 0L;
               jjoldActive_01 = 0x200000000000000L;
               jjoldActive_02 = 0L;
               jjoldActive_03 = 0L;
               break;
            case 73: 
               jjoldActive_00 = 0L;
               jjoldActive_01 = 0x180480000000000L;
               jjoldActive_02 = 0L;
               jjoldActive_03 = 0L;
               break;
            case 71: 
               jjoldActive_00 = 0L;
               jjoldActive_01 = 0x40000000000L;
               jjoldActive_02 = 0L;
               jjoldActive_03 = 0L;
               break;
            case 70: 
               jjoldActive_00 = 0x100L;
               jjoldActive_01 = 0x240000000L;
               jjoldActive_02 = 0L;
               jjoldActive_03 = 0L;
               break;
            case 69: 
               jjoldActive_00 = 0L;
               jjoldActive_01 = 0x2008000L;
               jjoldActive_02 = 0L;
               jjoldActive_03 = 0L;
               break;
            case 68: 
               jjoldActive_00 = 0x1000L;
               jjoldActive_01 = 0x400L;
               jjoldActive_02 = 0L;
               jjoldActive_03 = 0L;
               break;
            case 67: 
               jjoldActive_00 = 0x286a000000000000L;
               jjoldActive_01 = 0x9L;
               jjoldActive_02 = 0L;
               jjoldActive_03 = 0L;
               break;
            case 66: 
               jjoldActive_00 = 0xa00400000000L;
               jjoldActive_01 = 0L;
               jjoldActive_02 = 0L;
               jjoldActive_03 = 0L;
               break;
            case 65: 
               jjoldActive_00 = 0x22020000L;
               jjoldActive_01 = 0L;
               jjoldActive_02 = 0L;
               jjoldActive_03 = 0L;
               break;
            case 46: 
               matchedToken.kind = 16;
               jjstartStateSet = jjstates12;
               break MainLoop;
            case 44: 
               matchedToken.kind = 10;
               break ReturnLoop;
            case 32: 
               matchedToken.kind = 1;
               break ReturnLoop;
            case 125: 
               matchedToken.kind = 24;
               break ReturnLoop;
            case 123: 
               matchedToken.kind = 23;
               break ReturnLoop;
            case 122: 
               jjoldActive_00 = 0L;
               jjoldActive_01 = 0x1800000L;
               jjoldActive_02 = 0L;
               jjoldActive_03 = 0L;
               break;
            case 120: 
               jjoldActive_00 = 0L;
               jjoldActive_01 = 0x600000L;
               jjoldActive_02 = 0L;
               jjoldActive_03 = 0L;
               break;
            case 119: 
               jjoldActive_00 = 0L;
               jjoldActive_01 = 0L;
               jjoldActive_02 = 0L;
               jjoldActive_03 = 0x10L;
               break;
            case 118: 
               jjoldActive_00 = 0L;
               jjoldActive_01 = 0x100000000L;
               jjoldActive_02 = 0xa00L;
               jjoldActive_03 = 0L;
               break;
            case 117: 
               jjoldActive_00 = 0x40000L;
               jjoldActive_01 = 0L;
               jjoldActive_02 = 0L;
               jjoldActive_03 = 0L;
               break;
            case 116: 
               jjoldActive_00 = 0x10018000000L;
               jjoldActive_01 = 0x12008000000002L;
               jjoldActive_02 = 0x104L;
               jjoldActive_03 = 0x10100000L;
               break;
            case 115: 
               jjoldActive_00 = 0x201140300000000L;
               jjoldActive_01 = 0x8000021020100000L;
               jjoldActive_02 = 0x410000000000012L;
               jjoldActive_03 = 0xc0080L;
               break;
            case 114: 
               jjoldActive_00 = 0x8000000000L;
               jjoldActive_01 = 0x800300000000004L;
               jjoldActive_02 = 0L;
               jjoldActive_03 = 0x20000L;
               break;
            case 13: 
               matchedToken.kind = 4;
               break ReturnLoop;
            case 112: 
               jjoldActive_00 = 0x1000000080080000L;
               jjoldActive_01 = 0L;
               jjoldActive_02 = 0x200000000000000L;
               jjoldActive_03 = 0x400000L;
               break;
            case 111: 
               jjoldActive_00 = 0L;
               jjoldActive_01 = 0x900L;
               jjoldActive_02 = 0L;
               jjoldActive_03 = 0x800000L;
               break;
            case 10: 
               matchedToken.kind = 3;
               break ReturnLoop;
            case 110: 
               jjoldActive_00 = 0L;
               jjoldActive_01 = 0x21000000080000L;
               jjoldActive_02 = 0L;
               jjoldActive_03 = 0L;
               break;
            case 9: 
               matchedToken.kind = 2;
               break ReturnLoop;
            case 109: 
               jjoldActive_00 = 0x4000000L;
               jjoldActive_01 = 0x30L;
               jjoldActive_02 = 0x1e0000010060000L;
               jjoldActive_03 = 0x200L;
               break;
            case 108: 
               jjoldActive_00 = 0x4040000000L;
               jjoldActive_01 = 0x1000014000000000L;
               jjoldActive_02 = 0x100000L;
               jjoldActive_03 = 0x100L;
               break;
            case 107: 
               jjoldActive_00 = 0xc000000000000000L;
               jjoldActive_01 = 0L;
               jjoldActive_02 = 0L;
               jjoldActive_03 = 0L;
               break;
            case 106: 
               jjoldActive_00 = 0L;
               jjoldActive_01 = 0x400000000L;
               jjoldActive_02 = 0L;
               jjoldActive_03 = 0x2000000L;
               break;
            case 105: 
               jjoldActive_00 = 0L;
               jjoldActive_01 = 0x1000L;
               jjoldActive_02 = 0x8000L;
               jjoldActive_03 = 0x20000000L;
               break;
            case 104: 
               jjoldActive_00 = 0x80000000000000L;
               jjoldActive_01 = 0x2000000000L;
               jjoldActive_02 = 0x80L;
               jjoldActive_03 = 0L;
               break;
            case 103: 
               jjoldActive_00 = 0xa0000000000L;
               jjoldActive_01 = 0L;
               jjoldActive_02 = 0L;
               jjoldActive_03 = 0x4L;
               break;
            case 102: 
               jjoldActive_00 = 0x2000000000L;
               jjoldActive_01 = 0x880000000L;
               jjoldActive_02 = 0x80000000L;
               jjoldActive_03 = 0x1000400L;
               break;
            case 101: 
               jjoldActive_00 = 0L;
               jjoldActive_01 = 0x8000040L;
               jjoldActive_02 = 0x60000001L;
               jjoldActive_03 = 0L;
               break;
            default : 
               curPos =  1;
               if (curChar < 128)
                  if ((jjstartStateSet = jjinitStates_0[curChar]) == null)
                     return;
               else 
                  jjstartStateSet = jjallInitStates_0;
               jjnewStateCnt = jjstartStateSet.length;
               jjMoveNfa_0(jjstartStateSet, jjstateSet2);
               if (jjcurKind != 2147483647)
               {
                  matchedToken.kind = jjcurKind;
                  jjcurKind = 2147483647;
               }
               return;
         }
         try { curChar = input_stream.readChar(); }
         catch(java.io.IOException e) {
            StopStringLiteralDfa_0(0, jjoldActive_00, jjoldActive_01, jjoldActive_02, jjoldActive_03); 
            curPos = 1;
            throw e;
         }
         jjMoveStringLiteralDfa1_0();
         return;
    }
    curPos = 1;
    curChar = input_stream.readChar();
    jjnewStateCnt = jjstartStateSet.length;
    jjMoveNfa_0(jjstartStateSet, jjstateSet2);
    if (jjcurKind != 2147483647)
    {
       matchedToken.kind = jjcurKind;
       jjmatchedPos = 1;
       jjcurKind = 2147483647;
    }
    curPos = 2;
    return;
   }
   curPos = 1;
   return;
}
static private final void jjMoveStringLiteralDfa1_0() throws java.io.IOException
{
   ReturnLoop:
   for (;;)
   {
    MainLoop:
    for (;;)
    {
      StartNfaLoop:
      for (;;)
      { 
         switch(curChar)
         {
            case 99: 
               if (((jjnewActive_01 = jjoldActive_01 & 0x10000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x6000000L)|
                  (jjnewActive_03 = jjoldActive_03 & 0xc0000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 = 0L;
               break;
            case 98: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x600000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_01 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 97: 
               if (((jjnewActive_00 = jjoldActive_00 & 0xc04080000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x2800010800000024L)|
                  (jjnewActive_02 = jjoldActive_02 & 0xa0000000040020L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x200L)) == 0L)
                  break StartNfaLoop;
               break;
            case 83: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x2000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x1400000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 82: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x80L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_01 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 79: 
               if ((jjoldActive_00 & 0x8000L) != 0L)
               {
                  matchedToken.kind = 15;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_00 = jjoldActive_00 & 0x4000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x200000000000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 70: 
               if (((jjnewActive_02 = jjoldActive_02 & 0x7ffff00000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_03 = 0L;
               break;
            case 69: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x1000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_01 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 68: 
               if (((jjnewActive_01 = jjoldActive_01 & 0xa00000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 65: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x100L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_01 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 121: 
               if (((jjnewActive_01 = jjoldActive_01 & 0x9L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x100L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x4000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 = 0L;
               break;
            case 120: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x400000000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x2000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 119: 
               if (((jjnewActive_03 = jjoldActive_03 & 0x8L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_02 = 0L;
               break;
            case 118: 
               if (((jjnewActive_02 = jjoldActive_02 & 0x60000040L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_03 = 0L;
               break;
            case 117: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x20000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x400000200L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x8000000010000000L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x2000000L)) == 0L)
                  break StartNfaLoop;
               break;
            case 116: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x300000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x1000000000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x200000L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x80L)) == 0L)
                  break StartNfaLoop;
               break;
            case 114: 
               if (((jjnewActive_00 = jjoldActive_00 & 0xa2000040000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x40010040000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x200000001002004L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x910000L)) == 0L)
                  break StartNfaLoop;
               break;
            case 112: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x2000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x8000020020000000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x3810000000000010L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x2L)) == 0L)
                  break StartNfaLoop;
               break;
            case 111: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x3d7e811040000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x6d80a2c01a0002L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x408000000d81408L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x8428400L)) == 0L)
                  break StartNfaLoop;
               break;
            case 110: 
               if ((jjoldActive_01 & 0x800L) != 0L)
               {
                  matchedToken.kind = 75;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_00 = jjoldActive_00 & 0x20000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x180400008001040L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x20000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_02 = 0L;
               break;
            case 109: 
               if (((jjnewActive_01 = jjoldActive_01 & 0x80000002000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x8001L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_03 = 0L;
               break;
            case 108: 
               if (((jjnewActive_01 = jjoldActive_01 & 0x8000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x10000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_03 = 0L;
               break;
            case 107: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x140000000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_01 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 105: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x201208080000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x4000000100004490L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x140000088024200L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x15202000L)) == 0L)
                  break StartNfaLoop;
               break;
            case 104: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x40L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x2L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x31L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_01 = 0L;
               break;
            case 102: 
               if (((jjnewActive_01 = jjoldActive_01 & 0x100L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 101: 
               if (((jjnewActive_00 = jjoldActive_00 & 0xc080004018100000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x1412304004000000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x4000000000000880L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x1944L)) == 0L)
                  break StartNfaLoop;
               break;
            default : 
               break StartNfaLoop;
         }
         try { curChar = input_stream.readChar(); }
         catch(java.io.IOException e) {
            StopStringLiteralDfa_0(1, jjnewActive_00, jjnewActive_01, jjnewActive_02, jjnewActive_03); 
            curPos = 2;
            throw e;
         }
         jjMoveStringLiteralDfa2_0();
         return;
      }
      jjStartNfa_0(0, jjoldActive_00, jjoldActive_01, jjoldActive_02, jjoldActive_03); 
      curPos = 2;
      return;
    }
    jjmatchedPos = 1;
    curPos = 2;
    curChar = input_stream.readChar();
    jjnewStateCnt = jjstartStateSet.length;
    jjMoveNfa_0(jjstartStateSet, jjstateSet2);
    if (jjcurKind != 2147483647)
    {
       matchedToken.kind = jjcurKind;
       jjmatchedPos = 2;
       jjcurKind = 2147483647;
    }
    curPos = 3;
    return;
   }
}
static private final void jjMoveStringLiteralDfa2_0() throws java.io.IOException
{
   ReturnLoop:
   for (;;)
   {
    MainLoop:
    for (;;)
    {
      StartNfaLoop:
      for (;;)
      { 
         switch(curChar)
         {
            case 100: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x200000020000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x80400008000004L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 99: 
               if (((jjoldActive_00 = jjnewActive_00 & 0xc00020000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x100800L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x4000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_01 = 0L;
               break;
            case 98: 
               if (((jjoldActive_01 = jjnewActive_01 & 0x2000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 97: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x100000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0xa0000000040L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x40100000020180c4L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x1d0001L)) == 0L)
                  break StartNfaLoop;
               break;
            case 86: 
               if (((jjoldActive_02 = jjnewActive_02 & 0x6030000000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 85: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x4080L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_01 =                jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 84: 
               if (((jjoldActive_02 = jjnewActive_02 & 0x1008000000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 83: 
               if (((jjoldActive_02 = jjnewActive_02 & 0x804000000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 82: 
               if (((jjoldActive_02 = jjnewActive_02 & 0x402000000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 78: 
               if (((jjoldActive_02 = jjnewActive_02 & 0x201000000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 76: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x100L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_01 =                jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 73: 
               if (((jjoldActive_02 = jjnewActive_02 & 0x100800000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 70: 
               if ((jjnewActive_00 & 0x1000L) != 0L)
               {
                  matchedToken.kind = 12;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_02 = jjnewActive_02 & 0x80400000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 69: 
               if ((jjnewActive_00 & 0x2000L) != 0L)
               {
                  matchedToken.kind = 13;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            case 68: 
               if ((jjnewActive_01 & 0x200000000000000L) != 0L)
               {
                  matchedToken.kind = 121;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            case 67: 
               if (((jjoldActive_02 = jjnewActive_02 & 0x40200000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 66: 
               if (((jjoldActive_02 = jjnewActive_02 & 0x100000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 122: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x1000000000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_01 =                jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 121: 
               if ((jjnewActive_00 & 0x4000000000000000L) != 0L)
               {
                  matchedToken.kind = 62;
                  jjmatchedPos = 2;
               }
               if (((jjoldActive_00 = jjnewActive_00 & 0x8000140000000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x1000000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 120: 
               if ((jjnewActive_00 & 0x800000000000L) != 0L)
               {
                  matchedToken.kind = 47;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_00 = jjnewActive_00 & 0x18000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x12000000000020L)|
                  (jjoldActive_02 = jjnewActive_02 & 0xa0000000044000L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x1a40L)) == 0L)
                  break StartNfaLoop;
               break;
            case 119: 
               if ((jjnewActive_01 & 0x10000L) != 0L)
               {
                  matchedToken.kind = 80;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            case 118: 
               if (((jjoldActive_01 = jjnewActive_01 & 0x1000000000000000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x28L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_03 = 0L;
               break;
            case 117: 
               if (((jjoldActive_02 = jjnewActive_02 & 0x408000000000000L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x8000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 = 0L;
               break;
            case 116: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x500001084000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x2000000002001200L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x8000000000200000L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x10020000L)) == 0L)
                  break StartNfaLoop;
               break;
            case 115: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x100000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x500000080L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x10800200L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x4400000L)) == 0L)
                  break StartNfaLoop;
               break;
            case 114: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x80000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x21002000084400L)|
                  (jjoldActive_02 = jjnewActive_02 & 0xc001400L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x8000080L)) == 0L)
                  break StartNfaLoop;
               break;
            case 112: 
               if ((jjnewActive_01 & 0x2L) != 0L)
               {
                  matchedToken.kind = 65;
                  jjmatchedPos = 2;
               }
               if (((jjoldActive_00 = jjnewActive_00 & 0x10002000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x308001400000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x100L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x2L)) == 0L)
                  break StartNfaLoop;
               break;
            case 111: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x28000a2240600000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x4840010000000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x2000000001000000L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x24L)) == 0L)
                  break StartNfaLoop;
               break;
            case 110: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x40000000000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0xc40010200000010L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x140000000020000L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x500L)) == 0L)
                  break StartNfaLoop;
               break;
            case 109: 
               if (((jjoldActive_01 = jjnewActive_01 & 0x800000000L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x2002000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_02 = 0L;
               break;
            case 108: 
               if ((jjnewActive_00 & 0x40000L) != 0L)
               {
                  matchedToken.kind = 18;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_00 = jjnewActive_00 & 0x3e200000000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x108000000120009L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 105: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x1080400000000040L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x20a00000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x200000000482003L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x800018L)) == 0L)
                  break StartNfaLoop;
               break;
            case 104: 
               if (((jjoldActive_02 = jjnewActive_02 & 0x1800000000000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 103: 
               if ((jjnewActive_01 & 0x40000000L) != 0L)
               {
                  matchedToken.kind = 94;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_00 = jjnewActive_00 & 0x8000000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x84000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 102: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x4000000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x4000004000000100L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x20000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_02 = 0L;
               break;
            case 101: 
               if (((jjoldActive_01 = jjnewActive_01 & 0x8000000000048000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0xe0000010L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x1200000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 = 0L;
               break;
            default : 
               break StartNfaLoop;
         }
         try { curChar = input_stream.readChar(); }
         catch(java.io.IOException e) {
            StopStringLiteralDfa_0(2, jjoldActive_00, jjoldActive_01, jjoldActive_02, jjoldActive_03); 
            curPos = 3;
            throw e;
         }
         jjMoveStringLiteralDfa3_0();
         return;
      }
      jjStartNfa_0(1, jjnewActive_00, jjnewActive_01, jjnewActive_02, jjnewActive_03); 
      curPos = 3;
      return;
    }
    jjmatchedPos = 2;
    curPos = 3;
    curChar = input_stream.readChar();
    jjnewStateCnt = jjstartStateSet.length;
    jjMoveNfa_0(jjstartStateSet, jjstateSet2);
    if (jjcurKind != 2147483647)
    {
       matchedToken.kind = jjcurKind;
       jjmatchedPos = 3;
       jjcurKind = 2147483647;
    }
    curPos = 4;
    return;
   }
}
static private final void jjMoveStringLiteralDfa3_0() throws java.io.IOException
{
   ReturnLoop:
   for (;;)
   {
    MainLoop:
    for (;;)
    {
      StartNfaLoop:
      for (;;)
      { 
         switch(curChar)
         {
            case 100: 
               if (((jjnewActive_02 = jjoldActive_02 & 0x80L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_03 = 0L;
               break;
            case 99: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x80100000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x8000020000000000L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x8010L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_02 = 0L;
               break;
            case 98: 
               if (((jjnewActive_01 = jjoldActive_01 & 0x40L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 97: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x80000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x1440000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x100000L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x20000L)) == 0L)
                  break StartNfaLoop;
               break;
            case 86: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x8000000000000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_01 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 85: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x10000000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_01 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 84: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x4000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x8080000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 83: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x100L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_01 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 80: 
               if (((jjnewActive_02 = jjoldActive_02 & 0x60000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_03 = 0L;
               break;
            case 79: 
               if (((jjnewActive_02 = jjoldActive_02 & 0x8000000000000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_03 = 0L;
               break;
            case 70: 
               if (((jjnewActive_02 = jjoldActive_02 & 0x180000000000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_03 = 0L;
               break;
            case 69: 
               if ((jjoldActive_00 & 0x80L) != 0L)
               {
                  matchedToken.kind = 7;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_03 = jjoldActive_03 & 0x200L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_02 = 0L;
               break;
            case 67: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x100000000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x12000008000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 66: 
               if (((jjnewActive_02 = jjoldActive_02 & 0x60000000000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_03 = 0L;
               break;
            case 65: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x40000000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x30L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 120: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x600000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x1000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_01 =                jjnewActive_03 = 0L;
               break;
            case 119: 
               if (((jjnewActive_03 = jjoldActive_03 & 0x200000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_02 = 0L;
               break;
            case 118: 
               if (((jjnewActive_01 = jjoldActive_01 & 0x40000000008000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 117: 
               if (((jjnewActive_00 = jjoldActive_00 & 0xa0000000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x40000000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 116: 
               if ((jjoldActive_03 & 0x40L) != 0L)
               {
                  matchedToken.kind = 198;
                  jjmatchedPos = 3;
               }
               if (((jjnewActive_00 = jjoldActive_00 & 0x500005018000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x400004600000000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x2010804010000840L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x1c08L)) == 0L)
                  break StartNfaLoop;
               break;
            case 115: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x400000000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x10000100L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x1L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_03 = 0L;
               break;
            case 114: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x2800000100000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x4800002000000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x400000000000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_03 = 0L;
               break;
            case 112: 
               if ((jjoldActive_00 & 0x40000000L) != 0L)
               {
                  matchedToken.kind = 30;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_03 & 0x2000000L) != 0L)
               {
                  matchedToken.kind = 217;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_00 = jjoldActive_00 & 0x200000000L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x1L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_01 =                jjnewActive_02 = 0L;
               break;
            case 111: 
               if ((jjoldActive_03 & 0x20000000L) != 0L)
               {
                  matchedToken.kind = 221;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_00 = jjoldActive_00 & 0x38000000000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x8000000020200L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x200643300000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_03 = 0L;
               break;
            case 110: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x1000002000000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x20000000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x8100860490006L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x110000L)) == 0L)
                  break StartNfaLoop;
               break;
            case 109: 
               if (((jjnewActive_01 = jjoldActive_01 & 0x21000000a80000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x4000000000001400L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x4L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 = 0L;
               break;
            case 108: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x6200000000040L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x1000000000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x80482000000L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x190c4000L)) == 0L)
                  break StartNfaLoop;
               break;
            case 107: 
               if (((jjnewActive_00 = jjoldActive_00 & 0xc00000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x80L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 105: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x20000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x10000290410200dL)|
                  (jjnewActive_02 = jjoldActive_02 & 0x1008004800228L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x44000a0L)) == 0L)
                  break StartNfaLoop;
               break;
            case 104: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x8000020000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_01 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 103: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x80000000000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x800090000000000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x8000L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x100L)) == 0L)
                  break StartNfaLoop;
               break;
            case 102: 
               if (((jjnewActive_01 = jjoldActive_01 & 0x4000000000000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 101: 
               if ((jjoldActive_00 & 0x1000000000000L) != 0L)
               {
                  matchedToken.kind = 48;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_00 & 0x40000000000000L) != 0L)
               {
                  matchedToken.kind = 54;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_00 & 0x200000000000000L) != 0L)
               {
                  matchedToken.kind = 57;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_02 & 0x100L) != 0L)
               {
                  matchedToken.kind = 136;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_00 = jjoldActive_00 & 0x6000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x3080700000005400L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x1806030008206010L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x802002L)) == 0L)
                  break StartNfaLoop;
               break;
            default : 
               break StartNfaLoop;
         }
         try { curChar = input_stream.readChar(); }
         catch(java.io.IOException e) {
            StopStringLiteralDfa_0(3, jjnewActive_00, jjnewActive_01, jjnewActive_02, jjnewActive_03); 
            curPos = 4;
            throw e;
         }
         jjMoveStringLiteralDfa4_0();
         return;
      }
      jjStartNfa_0(2, jjoldActive_00, jjoldActive_01, jjoldActive_02, jjoldActive_03); 
      curPos = 4;
      return;
    }
    jjmatchedPos = 3;
    curPos = 4;
    curChar = input_stream.readChar();
    jjnewStateCnt = jjstartStateSet.length;
    jjMoveNfa_0(jjstartStateSet, jjstateSet2);
    if (jjcurKind != 2147483647)
    {
       matchedToken.kind = jjcurKind;
       jjmatchedPos = 4;
       jjcurKind = 2147483647;
    }
    curPos = 5;
    return;
   }
}
static private final void jjMoveStringLiteralDfa4_0() throws java.io.IOException
{
   ReturnLoop:
   for (;;)
   {
    MainLoop:
    for (;;)
    {
      StartNfaLoop:
      for (;;)
      { 
         switch(curChar)
         {
            case 100: 
               if ((jjnewActive_01 & 0x100000L) != 0L)
               {
                  matchedToken.kind = 84;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_01 & 0x800000000000L) != 0L)
               {
                  matchedToken.kind = 111;
                  jjmatchedPos = 4;
               }
               else if ((jjnewActive_02 & 0x10L) != 0L)
               {
                  matchedToken.kind = 132;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_02 & 0x80000000L) != 0L)
               {
                  matchedToken.kind = 159;
                  jjmatchedPos = 4;
               }
               else if ((jjnewActive_02 & 0x8000000000000L) != 0L)
               {
                  matchedToken.kind = 179;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_00 = jjnewActive_00 & 0x2800000000000040L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x4000000000000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x201000000000L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x9000000L)) == 0L)
                  break StartNfaLoop;
               break;
            case 99: 
               if (((jjoldActive_01 = jjnewActive_01 & 0x1404400L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x406030008000000L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x28L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 = 0L;
               break;
            case 98: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x200000000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x100000000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x200L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x4000000L)) == 0L)
                  break StartNfaLoop;
               break;
            case 97: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x8000000002000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x21300008088000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x60000002001440L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x2L)) == 0L)
                  break StartNfaLoop;
               break;
            case 87: 
               if (((jjoldActive_02 = jjnewActive_02 & 0x4000000000000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 85: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x4800000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_01 =                jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 84: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x200000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x4000000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 83: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x400000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x200000000L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x2400L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_02 = 0L;
               break;
            case 79: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x400000000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x200L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 76: 
               if (((jjoldActive_02 = jjnewActive_02 & 0x2000000000000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 69: 
               if ((jjnewActive_00 & 0x100L) != 0L)
               {
                  matchedToken.kind = 8;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_00 & 0x4000L) != 0L)
               {
                  matchedToken.kind = 14;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_02 = jjnewActive_02 & 0x10000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 67: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x200000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_01 =                jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 65: 
               if (((jjoldActive_01 = jjnewActive_01 & 0x80L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 122: 
               if (((jjoldActive_01 = jjnewActive_01 & 0x2000000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 121: 
               if (((jjoldActive_01 = jjnewActive_01 & 0x80000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 120: 
               if (((jjoldActive_01 = jjnewActive_01 & 0x80400000000000L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x200L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_02 = 0L;
               break;
            case 117: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x18000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0xc000010002000004L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x1800L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_02 = 0L;
               break;
            case 116: 
               if ((jjnewActive_00 & 0x1000000000000000L) != 0L)
               {
                  matchedToken.kind = 60;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_00 = jjnewActive_00 & 0xa100000000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x502860d80000L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x420100L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_01 = 0L;
               break;
            case 115: 
               if (((jjoldActive_01 = jjnewActive_01 & 0x10040000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x5L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x110000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 = 0L;
               break;
            case 114: 
               if ((jjnewActive_00 & 0x8000000000000L) != 0L)
               {
                  matchedToken.kind = 51;
                  jjmatchedPos = 4;
               }
               else if ((jjnewActive_00 & 0x10000000000000L) != 0L)
               {
                  matchedToken.kind = 52;
                  jjmatchedPos = 4;
               }
               if (((jjoldActive_00 = jjnewActive_00 & 0x20010004100000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x2008000000020000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x1b80804000000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_03 = 0L;
               break;
            case 112: 
               if ((jjnewActive_01 & 0x40000000000L) != 0L)
               {
                  matchedToken.kind = 106;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_02 = jjnewActive_02 & 0x4000000L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x200000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 = 0L;
               break;
            case 111: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x500101020020000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x12008000000000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x80500060800L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_03 = 0L;
               break;
            case 110: 
               if (((jjoldActive_00 = jjnewActive_00 & 0xe0000000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x100000004001039L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x202000L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x800080L)) == 0L)
                  break StartNfaLoop;
               break;
            case 109: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x80000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x1008000000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 108: 
               if ((jjnewActive_01 & 0x1000000000000000L) != 0L)
               {
                  matchedToken.kind = 124;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_01 = jjnewActive_01 & 0x800000040L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x40200004080L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_03 = 0L;
               break;
            case 105: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x6000000000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x20400000000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x10000001000002L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_03 = 0L;
               break;
            case 104: 
               if ((jjnewActive_00 & 0x80000000L) != 0L)
               {
                  matchedToken.kind = 31;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_00 = jjnewActive_00 & 0x80000000000000L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x8010L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_01 =                jjoldActive_02 = 0L;
               break;
            case 103: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x400000000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x20L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 102: 
               if (((jjoldActive_02 = jjnewActive_02 & 0x8000000000000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 101: 
               if ((jjnewActive_01 & 0x20000000L) != 0L)
               {
                  matchedToken.kind = 93;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_01 & 0x1000000000L) != 0L)
               {
                  matchedToken.kind = 100;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_01 & 0x800000000000000L) != 0L)
               {
                  matchedToken.kind = 123;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_02 & 0x8000L) != 0L)
               {
                  matchedToken.kind = 143;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_03 & 0x1L) != 0L)
               {
                  matchedToken.kind = 192;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_03 & 0x40000L) != 0L)
               {
                  matchedToken.kind = 210;
                  jjmatchedPos = 4;
               }
               else if ((jjnewActive_03 & 0x10000000L) != 0L)
               {
                  matchedToken.kind = 220;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_01 = jjnewActive_01 & 0x440080000a02100L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x10008L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x84004L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 = 0L;
               break;
            default : 
               break StartNfaLoop;
         }
         try { curChar = input_stream.readChar(); }
         catch(java.io.IOException e) {
            StopStringLiteralDfa_0(4, jjoldActive_00, jjoldActive_01, jjoldActive_02, jjoldActive_03); 
            curPos = 5;
            throw e;
         }
         jjMoveStringLiteralDfa5_0();
         return;
      }
      jjStartNfa_0(3, jjnewActive_00, jjnewActive_01, jjnewActive_02, jjnewActive_03); 
      curPos = 5;
      return;
    }
    jjmatchedPos = 4;
    curPos = 5;
    curChar = input_stream.readChar();
    jjnewStateCnt = jjstartStateSet.length;
    jjMoveNfa_0(jjstartStateSet, jjstateSet2);
    if (jjcurKind != 2147483647)
    {
       matchedToken.kind = jjcurKind;
       jjmatchedPos = 5;
       jjcurKind = 2147483647;
    }
    curPos = 6;
    return;
   }
}
static private final void jjMoveStringLiteralDfa5_0() throws java.io.IOException
{
   ReturnLoop:
   for (;;)
   {
    MainLoop:
    for (;;)
    {
      StartNfaLoop:
      for (;;)
      { 
         switch(curChar)
         {
            case 100: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x40a0000000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x9L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 99: 
               if (((jjnewActive_02 = jjoldActive_02 & 0x60000000000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_03 = 0L;
               break;
            case 97: 
               if (((jjnewActive_01 = jjoldActive_01 & 0x10000000000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x10482400000020L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_03 = 0L;
               break;
            case 85: 
               if (((jjnewActive_00 = jjoldActive_00 & 0xa000000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_01 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 84: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x100000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x80000000000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x4008L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_03 = 0L;
               break;
            case 83: 
               if (((jjnewActive_01 = jjoldActive_01 & 0x10000000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x410000L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x8000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 = 0L;
               break;
            case 80: 
               if (((jjnewActive_01 = jjoldActive_01 & 0x20000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 79: 
               if (((jjnewActive_02 = jjoldActive_02 & 0x40000000L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x1080000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 = 0L;
               break;
            case 76: 
               if (((jjnewActive_02 = jjoldActive_02 & 0x80000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_03 = 0L;
               break;
            case 73: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x20000000000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0xc000000000000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x20000000L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x8004000L)) == 0L)
                  break StartNfaLoop;
               break;
            case 67: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x20000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x4000000L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x10L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_02 = 0L;
               break;
            case 66: 
               if (((jjnewActive_01 = jjoldActive_01 & 0x8000000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 51: 
               if (((jjnewActive_02 = jjoldActive_02 & 0x4120800000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_03 = 0L;
               break;
            case 50: 
               if (((jjnewActive_02 = jjoldActive_02 & 0x2010000000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_03 = 0L;
               break;
            case 121: 
               if ((jjoldActive_01 & 0x800000000L) != 0L)
               {
                  matchedToken.kind = 99;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            case 120: 
               if ((jjoldActive_01 & 0x40000000000000L) != 0L)
               {
                  matchedToken.kind = 118;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            case 118: 
               if (((jjnewActive_02 = jjoldActive_02 & 0x10000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_03 = 0L;
               break;
            case 117: 
               if (((jjnewActive_02 = jjoldActive_02 & 0x200000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_03 = 0L;
               break;
            case 116: 
               if ((jjoldActive_00 & 0x80000000000000L) != 0L)
               {
                  matchedToken.kind = 55;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_01 & 0x100L) != 0L)
               {
                  matchedToken.kind = 72;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_02 & 0x4000000L) != 0L)
               {
                  matchedToken.kind = 154;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_01 = jjoldActive_01 & 0x30020000c400L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x8002000L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x800604L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 = 0L;
               break;
            case 115: 
               if ((jjoldActive_01 & 0x4L) != 0L)
               {
                  matchedToken.kind = 66;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_00 = jjoldActive_00 & 0x2000000000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x4000000002001000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x60000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_03 = 0L;
               break;
            case 114: 
               if ((jjoldActive_00 & 0x20000L) != 0L)
               {
                  matchedToken.kind = 17;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_01 & 0x400000000000000L) != 0L)
               {
                  matchedToken.kind = 122;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_02 & 0x800L) != 0L)
               {
                  matchedToken.kind = 139;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_00 = jjoldActive_00 & 0x4c1a000040L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x2000040L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x1802L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_01 = 0L;
               break;
            case 112: 
               if ((jjoldActive_01 & 0x8000000L) != 0L)
               {
                  matchedToken.kind = 91;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_01 = jjoldActive_01 & 0x80000000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x4L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_03 = 0L;
               break;
            case 111: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x200000000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x12006000000000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x180040200000000L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x200000L)) == 0L)
                  break StartNfaLoop;
               break;
            case 110: 
               if (((jjnewActive_01 = jjoldActive_01 & 0x20000a02080L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x2L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_03 = 0L;
               break;
            case 109: 
               if ((jjoldActive_00 & 0x400000000000000L) != 0L)
               {
                  matchedToken.kind = 58;
                  jjmatchedPos = 5;
               }
               if (((jjnewActive_00 = jjoldActive_00 & 0x100001000000000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x1000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_01 =                jjnewActive_03 = 0L;
               break;
            case 108: 
               if ((jjoldActive_00 & 0x10000000000L) != 0L)
               {
                  matchedToken.kind = 40;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_01 & 0x1000000000000L) != 0L)
               {
                  matchedToken.kind = 112;
                  jjmatchedPos = 5;
               }
               else if ((jjoldActive_02 & 0x400L) != 0L)
               {
                  matchedToken.kind = 138;
                  jjmatchedPos = 5;
               }
               else if ((jjoldActive_02 & 0x100000000L) != 0L)
               {
                  matchedToken.kind = 160;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_00 = jjoldActive_00 & 0x8000100000000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x8020000000080000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x1000L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x100000L)) == 0L)
                  break StartNfaLoop;
               break;
            case 105: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x2800000204500000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x2000000101400000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x6200804000900281L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x4420000L)) == 0L)
                  break StartNfaLoop;
               break;
            case 104: 
               if ((jjoldActive_03 & 0x8L) != 0L)
               {
                  matchedToken.kind = 195;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_03 & 0x100L) != 0L)
               {
                  matchedToken.kind = 200;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            case 103: 
               if ((jjoldActive_03 & 0x80L) != 0L)
               {
                  matchedToken.kind = 199;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_00 = jjoldActive_00 & 0x40000000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x30L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 102: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x400000000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x400000200L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x8000000000000000L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x10000L)) == 0L)
                  break StartNfaLoop;
               break;
            case 101: 
               if ((jjoldActive_01 & 0x100000000000000L) != 0L)
               {
                  matchedToken.kind = 120;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_02 & 0x1000000000L) != 0L)
               {
                  matchedToken.kind = 164;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_02 & 0x8000000000L) != 0L)
               {
                  matchedToken.kind = 167;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_02 & 0x200000000000L) != 0L)
               {
                  matchedToken.kind = 173;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_02 & 0x1000000000000L) != 0L)
               {
                  matchedToken.kind = 176;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_02 & 0x400000000000000L) != 0L)
               {
                  matchedToken.kind = 186;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_02 & 0x800000000000000L) != 0L)
               {
                  matchedToken.kind = 187;
                  jjmatchedPos = 5;
               }
               else if ((jjoldActive_03 & 0x20L) != 0L)
               {
                  matchedToken.kind = 197;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_00 = jjoldActive_00 & 0x280000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x80400000040040L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x1000000000000000L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x2000L)) == 0L)
                  break StartNfaLoop;
               break;
            default : 
               break StartNfaLoop;
         }
         try { curChar = input_stream.readChar(); }
         catch(java.io.IOException e) {
            StopStringLiteralDfa_0(5, jjnewActive_00, jjnewActive_01, jjnewActive_02, jjnewActive_03); 
            curPos = 6;
            throw e;
         }
         jjMoveStringLiteralDfa6_0();
         return;
      }
      jjStartNfa_0(4, jjoldActive_00, jjoldActive_01, jjoldActive_02, jjoldActive_03); 
      curPos = 6;
      return;
    }
    jjmatchedPos = 5;
    curPos = 6;
    curChar = input_stream.readChar();
    jjnewStateCnt = jjstartStateSet.length;
    jjMoveNfa_0(jjstartStateSet, jjstateSet2);
    if (jjcurKind != 2147483647)
    {
       matchedToken.kind = jjcurKind;
       jjmatchedPos = 6;
       jjcurKind = 2147483647;
    }
    curPos = 7;
    return;
   }
}
static private final void jjMoveStringLiteralDfa6_0() throws java.io.IOException
{
   ReturnLoop:
   for (;;)
   {
    MainLoop:
    for (;;)
    {
      StartNfaLoop:
      for (;;)
      { 
         switch(curChar)
         {
            case 100: 
               if ((jjnewActive_01 & 0x40L) != 0L)
               {
                  matchedToken.kind = 70;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_01 = jjnewActive_01 & 0x80400000000000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x4000000000000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_03 = 0L;
               break;
            case 97: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x200006000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0xa000000004000000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x10202004L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x900002L)) == 0L)
                  break StartNfaLoop;
               break;
            case 85: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x1000000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_01 =                jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 84: 
               if ((jjnewActive_01 & 0x200000000000L) != 0L)
               {
                  matchedToken.kind = 109;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            case 83: 
               if ((jjnewActive_01 & 0x100000000000L) != 0L)
               {
                  matchedToken.kind = 108;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_02 = jjnewActive_02 & 0x1000000000000040L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 82: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x100400000000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x4000000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 80: 
               if (((jjoldActive_01 = jjnewActive_01 & 0x80000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 79: 
               if (((jjoldActive_02 = jjnewActive_02 & 0x8000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 73: 
               if (((jjoldActive_01 = jjnewActive_01 & 0x20000000000000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x2001000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_03 = 0L;
               break;
            case 67: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x80000000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_01 =                jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 65: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x20000000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x40000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x8000000000000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_03 = 0L;
               break;
            case 50: 
               if ((jjnewActive_02 & 0x800000000L) != 0L)
               {
                  matchedToken.kind = 163;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_02 & 0x100000000000L) != 0L)
               {
                  matchedToken.kind = 172;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            case 122: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x400000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_01 =                jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 121: 
               if ((jjnewActive_01 & 0x400000000L) != 0L)
               {
                  matchedToken.kind = 98;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_01 = jjnewActive_01 & 0x200000000L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x400L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_02 = 0L;
               break;
            case 118: 
               if (((jjoldActive_02 = jjnewActive_02 & 0x1L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 117: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x8000000000000000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x40000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 116: 
               if ((jjnewActive_02 & 0x400000000L) != 0L)
               {
                  matchedToken.kind = 162;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_02 & 0x80000000000L) != 0L)
               {
                  matchedToken.kind = 171;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_00 = jjnewActive_00 & 0x80000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x2000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x200402000000020L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_03 = 0L;
               break;
            case 115: 
               if (((jjoldActive_01 = jjnewActive_01 & 0xa00000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 114: 
               if ((jjnewActive_02 & 0x200000000L) != 0L)
               {
                  matchedToken.kind = 161;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_02 & 0x40000000000L) != 0L)
               {
                  matchedToken.kind = 170;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_00 = jjnewActive_00 & 0xa000000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x12000000000000L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x80004L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_02 = 0L;
               break;
            case 112: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x100000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_01 =                jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 111: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x100400000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x8000000000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x900000L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x430000L)) == 0L)
                  break StartNfaLoop;
               break;
            case 110: 
               if ((jjnewActive_02 & 0x20000000L) != 0L)
               {
                  matchedToken.kind = 157;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_00 = jjnewActive_00 & 0x2820000000200000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0xc002001400000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x180804000000000L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x8006000L)) == 0L)
                  break StartNfaLoop;
               break;
            case 109: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x200000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_01 =                jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 108: 
               if ((jjnewActive_00 & 0x800000000L) != 0L)
               {
                  matchedToken.kind = 35;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_00 & 0x4000000000L) != 0L)
               {
                  matchedToken.kind = 38;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_00 = jjnewActive_00 & 0x40020000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x100000030L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x10000000000200L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x4000000L)) == 0L)
                  break StartNfaLoop;
               break;
            case 107: 
               if ((jjnewActive_02 & 0x20000000000000L) != 0L)
               {
                  matchedToken.kind = 181;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_02 & 0x40000000000000L) != 0L)
               {
                  matchedToken.kind = 182;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            case 105: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x2000100000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x200d400L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x10e0000L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x200000L)) == 0L)
                  break StartNfaLoop;
               break;
            case 104: 
               if (((jjoldActive_03 = jjnewActive_03 & 0x10L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 =                jjoldActive_02 = 0L;
               break;
            case 103: 
               if ((jjnewActive_01 & 0x20000000000L) != 0L)
               {
                  matchedToken.kind = 105;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_01 = jjnewActive_01 & 0x10000000080L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x2000000000000080L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_03 = 0L;
               break;
            case 102: 
               if ((jjnewActive_02 & 0x10000000000L) != 0L)
               {
                  matchedToken.kind = 168;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_02 & 0x20000000000L) != 0L)
               {
                  matchedToken.kind = 169;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_02 & 0x2000000000000L) != 0L)
               {
                  matchedToken.kind = 177;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_02 & 0x4000000000000L) != 0L)
               {
                  matchedToken.kind = 178;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_01 = jjnewActive_01 & 0x200L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x1000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_02 = 0L;
               break;
            case 101: 
               if ((jjnewActive_00 & 0x10000000L) != 0L)
               {
                  matchedToken.kind = 28;
                  jjmatchedPos = 6;
               }
               else if ((jjnewActive_00 & 0x4000000000000L) != 0L)
               {
                  matchedToken.kind = 50;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_01 & 0x80000000L) != 0L)
               {
                  matchedToken.kind = 95;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_00 = jjnewActive_00 & 0x8000040L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x4000080010020009L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x41400aL)|
                  (jjoldActive_03 = jjnewActive_03 & 0x9a00L)) == 0L)
                  break StartNfaLoop;
               break;
            default : 
               break StartNfaLoop;
         }
         try { curChar = input_stream.readChar(); }
         catch(java.io.IOException e) {
            StopStringLiteralDfa_0(6, jjoldActive_00, jjoldActive_01, jjoldActive_02, jjoldActive_03); 
            curPos = 7;
            throw e;
         }
         jjMoveStringLiteralDfa7_0();
         return;
      }
      jjStartNfa_0(5, jjnewActive_00, jjnewActive_01, jjnewActive_02, jjnewActive_03); 
      curPos = 7;
      return;
    }
    jjmatchedPos = 6;
    curPos = 7;
    curChar = input_stream.readChar();
    jjnewStateCnt = jjstartStateSet.length;
    jjMoveNfa_0(jjstartStateSet, jjstateSet2);
    if (jjcurKind != 2147483647)
    {
       matchedToken.kind = jjcurKind;
       jjmatchedPos = 7;
       jjcurKind = 2147483647;
    }
    curPos = 8;
    return;
   }
}
static private final void jjMoveStringLiteralDfa7_0() throws java.io.IOException
{
   ReturnLoop:
   for (;;)
   {
    MainLoop:
    for (;;)
    {
      StartNfaLoop:
      for (;;)
      { 
         switch(curChar)
         {
            case 100: 
               if ((jjoldActive_01 & 0x2000000000000L) != 0L)
               {
                  matchedToken.kind = 113;
                  jjmatchedPos = 7;
               }
               if (((jjnewActive_01 = jjoldActive_01 & 0x1c000000000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 99: 
               if (((jjnewActive_01 = jjoldActive_01 & 0x10000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 97: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x2900000000000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_01 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 86: 
               if (((jjnewActive_03 = jjoldActive_03 & 0x1000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_02 = 0L;
               break;
            case 84: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x8000000L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x1000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_01 =                jjnewActive_02 = 0L;
               break;
            case 76: 
               if (((jjnewActive_01 = jjoldActive_01 & 0x80000000000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 73: 
               if (((jjnewActive_01 = jjoldActive_01 & 0x2000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 70: 
               if (((jjnewActive_01 = jjoldActive_01 & 0x400000000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 67: 
               if (((jjnewActive_01 = jjoldActive_01 & 0x4000000000000000L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x800L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_02 = 0L;
               break;
            case 121: 
               if ((jjoldActive_02 & 0x200000000000000L) != 0L)
               {
                  matchedToken.kind = 185;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_03 & 0x4L) != 0L)
               {
                  matchedToken.kind = 194;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            case 120: 
               if (((jjnewActive_01 = jjoldActive_01 & 0x80000000000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x4008L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_03 = 0L;
               break;
            case 117: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x400000000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x8000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_01 =                jjnewActive_03 = 0L;
               break;
            case 116: 
               if ((jjoldActive_02 & 0x400000L) != 0L)
               {
                  matchedToken.kind = 150;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_02 & 0x40000000L) != 0L)
               {
                  matchedToken.kind = 158;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_02 & 0x80000000000000L) != 0L)
               {
                  matchedToken.kind = 183;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_02 & 0x100000000000000L) != 0L)
               {
                  matchedToken.kind = 184;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_00 = jjoldActive_00 & 0x20000000300000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0xa000001000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x4000000001262000L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x904000L)) == 0L)
                  break StartNfaLoop;
               break;
            case 115: 
               if (((jjnewActive_01 = jjoldActive_01 & 0x200L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x2L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x2000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 = 0L;
               break;
            case 114: 
               if ((jjoldActive_00 & 0x100000000000L) != 0L)
               {
                  matchedToken.kind = 44;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_01 & 0x1L) != 0L)
               {
                  matchedToken.kind = 64;
                  jjmatchedPos = 7;
               }
               if (((jjnewActive_00 = jjoldActive_00 & 0x201000000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x8000000000020008L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x4L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x10000L)) == 0L)
                  break StartNfaLoop;
               break;
            case 112: 
               if ((jjoldActive_01 & 0x4000000L) != 0L)
               {
                  matchedToken.kind = 90;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            case 111: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x2480000000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x200c400L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x10L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_02 = 0L;
               break;
            case 110: 
               if ((jjoldActive_00 & 0x40L) != 0L)
               {
                  matchedToken.kind = 6;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_02 & 0x100000L) != 0L)
               {
                  matchedToken.kind = 148;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_03 & 0x20000L) != 0L)
               {
                  matchedToken.kind = 209;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_03 & 0x400000L) != 0L)
               {
                  matchedToken.kind = 214;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_00 = jjoldActive_00 & 0x20002000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x20000000040000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x8000000002811000L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x208202L)) == 0L)
                  break StartNfaLoop;
               break;
            case 109: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x100000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_01 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 108: 
               if ((jjoldActive_00 & 0x4000000L) != 0L)
               {
                  matchedToken.kind = 26;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_00 & 0x2000000000L) != 0L)
               {
                  matchedToken.kind = 37;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_00 & 0x8000000000L) != 0L)
               {
                  matchedToken.kind = 39;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_01 & 0x2000000000000000L) != 0L)
               {
                  matchedToken.kind = 125;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_01 = jjoldActive_01 & 0x200000080L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x10000000L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x400L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 = 0L;
               break;
            case 105: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x20000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x4100a00000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x10402000000260L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x4080000L)) == 0L)
                  break StartNfaLoop;
               break;
            case 104: 
               if (((jjnewActive_02 = jjoldActive_02 & 0x2000000000000080L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_03 = 0L;
               break;
            case 103: 
               if ((jjoldActive_01 & 0x400000L) != 0L)
               {
                  matchedToken.kind = 86;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_01 & 0x1000000L) != 0L)
               {
                  matchedToken.kind = 88;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_02 & 0x4000000000L) != 0L)
               {
                  matchedToken.kind = 166;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_02 & 0x800000000000L) != 0L)
               {
                  matchedToken.kind = 175;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_02 = jjoldActive_02 & 0x80000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_03 = 0L;
               break;
            case 102: 
               if (((jjnewActive_03 = jjoldActive_03 & 0x8000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_02 = 0L;
               break;
            case 101: 
               if ((jjoldActive_00 & 0x400000L) != 0L)
               {
                  matchedToken.kind = 22;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_00 & 0x200000000L) != 0L)
               {
                  matchedToken.kind = 33;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_00 & 0x40000000000L) != 0L)
               {
                  matchedToken.kind = 42;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_00 & 0x8000000000000000L) != 0L)
               {
                  matchedToken.kind = 63;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_01 & 0x10L) != 0L)
               {
                  matchedToken.kind = 68;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_01 & 0x20L) != 0L)
               {
                  matchedToken.kind = 69;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_01 & 0x10000000000L) != 0L)
               {
                  matchedToken.kind = 104;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_00 = jjoldActive_00 & 0x80000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x80000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x1000000000000001L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_03 = 0L;
               break;
            default : 
               break StartNfaLoop;
         }
         try { curChar = input_stream.readChar(); }
         catch(java.io.IOException e) {
            StopStringLiteralDfa_0(7, jjnewActive_00, jjnewActive_01, jjnewActive_02, jjnewActive_03); 
            curPos = 8;
            throw e;
         }
         jjMoveStringLiteralDfa8_0();
         return;
      }
      jjStartNfa_0(6, jjoldActive_00, jjoldActive_01, jjoldActive_02, jjoldActive_03); 
      curPos = 8;
      return;
    }
    jjmatchedPos = 7;
    curPos = 8;
    curChar = input_stream.readChar();
    jjnewStateCnt = jjstartStateSet.length;
    jjMoveNfa_0(jjstartStateSet, jjstateSet2);
    if (jjcurKind != 2147483647)
    {
       matchedToken.kind = jjcurKind;
       jjmatchedPos = 8;
       jjcurKind = 2147483647;
    }
    curPos = 9;
    return;
   }
}
static private final void jjMoveStringLiteralDfa8_0() throws java.io.IOException
{
   ReturnLoop:
   for (;;)
   {
    MainLoop:
    for (;;)
    {
      StartNfaLoop:
      for (;;)
      { 
         switch(curChar)
         {
            case 100: 
               if ((jjnewActive_00 & 0x200000000000L) != 0L)
               {
                  matchedToken.kind = 45;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_00 = jjnewActive_00 & 0x100000000000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x20000000000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 99: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x2000000L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x2L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_01 =                jjoldActive_02 = 0L;
               break;
            case 97: 
               if (((jjoldActive_01 = jjnewActive_01 & 0x402000000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 86: 
               if (((jjoldActive_01 = jjnewActive_01 & 0x20000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 83: 
               if (((jjoldActive_01 = jjnewActive_01 & 0x8L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 73: 
               if (((jjoldActive_01 = jjnewActive_01 & 0x10000000000000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x800000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_03 = 0L;
               break;
            case 67: 
               if (((jjoldActive_01 = jjnewActive_01 & 0x8000000000000000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x1L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_03 = 0L;
               break;
            case 122: 
               if (((jjoldActive_02 = jjnewActive_02 & 0x10000000000040L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 121: 
               if ((jjnewActive_01 & 0x1000L) != 0L)
               {
                  matchedToken.kind = 76;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_02 = jjnewActive_02 & 0x1000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 117: 
               if (((jjoldActive_02 = jjnewActive_02 & 0x10000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 116: 
               if ((jjnewActive_02 & 0x80L) != 0L)
               {
                  matchedToken.kind = 135;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_02 & 0x2000000000000000L) != 0L)
               {
                  matchedToken.kind = 189;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_03 & 0x200L) != 0L)
               {
                  matchedToken.kind = 201;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_03 & 0x200000L) != 0L)
               {
                  matchedToken.kind = 213;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_00 = jjnewActive_00 & 0x2800400000000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x88110000000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0xa005208L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x4000000L)) == 0L)
                  break StartNfaLoop;
               break;
            case 115: 
               if ((jjnewActive_02 & 0x2L) != 0L)
               {
                  matchedToken.kind = 129;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_02 = jjnewActive_02 & 0x10000L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x8000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 = 0L;
               break;
            case 114: 
               if ((jjnewActive_00 & 0x80000L) != 0L)
               {
                  matchedToken.kind = 19;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_00 = jjnewActive_00 & 0x8000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x80000L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x1000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_02 = 0L;
               break;
            case 112: 
               if ((jjnewActive_00 & 0x20000000L) != 0L)
               {
                  matchedToken.kind = 29;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            case 111: 
               if ((jjnewActive_03 & 0x8000000L) != 0L)
               {
                  matchedToken.kind = 219;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_01 = jjnewActive_01 & 0x4000000000a00000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x402000000020L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x2800L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 = 0L;
               break;
            case 110: 
               if ((jjnewActive_00 & 0x2000000000000L) != 0L)
               {
                  matchedToken.kind = 49;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_01 & 0x4000L) != 0L)
               {
                  matchedToken.kind = 78;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_01 & 0x2000000L) != 0L)
               {
                  matchedToken.kind = 89;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_00 = jjnewActive_00 & 0x400000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0xa400L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x1000000000000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_03 = 0L;
               break;
            case 109: 
               if ((jjnewActive_03 & 0x10000L) != 0L)
               {
                  matchedToken.kind = 208;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            case 108: 
               if ((jjnewActive_00 & 0x1000000000L) != 0L)
               {
                  matchedToken.kind = 36;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_00 = jjnewActive_00 & 0x80000000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_01 =                jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 105: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x100000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x80000000000000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x262000L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x1900010L)) == 0L)
                  break StartNfaLoop;
               break;
            case 104: 
               if ((jjnewActive_02 & 0x4000000000000000L) != 0L)
               {
                  matchedToken.kind = 190;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_02 = jjnewActive_02 & 0x80000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 103: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x20000000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x4000040000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x8000000000000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_03 = 0L;
               break;
            case 101: 
               if ((jjnewActive_00 & 0x100000000L) != 0L)
               {
                  matchedToken.kind = 32;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_01 & 0x80L) != 0L)
               {
                  matchedToken.kind = 71;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_01 & 0x200000000L) != 0L)
               {
                  matchedToken.kind = 97;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_03 & 0x400L) != 0L)
               {
                  matchedToken.kind = 202;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_00 = jjnewActive_00 & 0x20000000200000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0xc000000000200L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x4L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x84000L)) == 0L)
                  break StartNfaLoop;
               break;
            default : 
               break StartNfaLoop;
         }
         try { curChar = input_stream.readChar(); }
         catch(java.io.IOException e) {
            StopStringLiteralDfa_0(8, jjoldActive_00, jjoldActive_01, jjoldActive_02, jjoldActive_03); 
            curPos = 9;
            throw e;
         }
         jjMoveStringLiteralDfa9_0();
         return;
      }
      jjStartNfa_0(7, jjnewActive_00, jjnewActive_01, jjnewActive_02, jjnewActive_03); 
      curPos = 9;
      return;
    }
    jjmatchedPos = 8;
    curPos = 9;
    curChar = input_stream.readChar();
    jjnewStateCnt = jjstartStateSet.length;
    jjMoveNfa_0(jjstartStateSet, jjstateSet2);
    if (jjcurKind != 2147483647)
    {
       matchedToken.kind = jjcurKind;
       jjmatchedPos = 9;
       jjcurKind = 2147483647;
    }
    curPos = 10;
    return;
   }
}
static private final void jjMoveStringLiteralDfa9_0() throws java.io.IOException
{
   ReturnLoop:
   for (;;)
   {
    MainLoop:
    for (;;)
    {
      StartNfaLoop:
      for (;;)
      { 
         switch(curChar)
         {
            case 100: 
               if ((jjoldActive_00 & 0x400000000L) != 0L)
               {
                  matchedToken.kind = 34;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            case 99: 
               if (((jjnewActive_01 = jjoldActive_01 & 0x400000000000L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x10L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_02 = 0L;
               break;
            case 97: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x400008000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x400L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x10000000L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x1000L)) == 0L)
                  break StartNfaLoop;
               break;
            case 86: 
               if (((jjnewActive_01 = jjoldActive_01 & 0x80000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 83: 
               if (((jjnewActive_02 = jjoldActive_02 & 0x1000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_03 = 0L;
               break;
            case 71: 
               if (((jjnewActive_01 = jjoldActive_01 & 0x8000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 121: 
               if (((jjnewActive_01 = jjoldActive_01 & 0x100000000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x200L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x4000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 = 0L;
               break;
            case 120: 
               if ((jjoldActive_01 & 0x4000000000000L) != 0L)
               {
                  matchedToken.kind = 114;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_01 & 0x8000000000000L) != 0L)
               {
                  matchedToken.kind = 115;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            case 117: 
               if (((jjnewActive_01 = jjoldActive_01 & 0x80000000000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x4008L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_03 = 0L;
               break;
            case 116: 
               if ((jjoldActive_01 & 0x200L) != 0L)
               {
                  matchedToken.kind = 73;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_02 & 0x80000L) != 0L)
               {
                  matchedToken.kind = 147;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_01 = jjoldActive_01 & 0x2000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 115: 
               if (((jjnewActive_02 = jjoldActive_02 & 0x1000000000000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_03 = 0L;
               break;
            case 114: 
               if ((jjoldActive_00 & 0x200000L) != 0L)
               {
                  matchedToken.kind = 21;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_03 & 0x2000L) != 0L)
               {
                  matchedToken.kind = 205;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_00 = jjoldActive_00 & 0x20000000000000L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x4000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_01 =                jjnewActive_02 = 0L;
               break;
            case 112: 
               if (((jjnewActive_02 = jjoldActive_02 & 0x8000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_03 = 0L;
               break;
            case 111: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x80000100000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x8000008000000000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x272001L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x908800L)) == 0L)
                  break StartNfaLoop;
               break;
            case 110: 
               if ((jjoldActive_01 & 0x200000L) != 0L)
               {
                  matchedToken.kind = 85;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_01 & 0x800000L) != 0L)
               {
                  matchedToken.kind = 87;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_02 & 0x2000000000L) != 0L)
               {
                  matchedToken.kind = 165;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_02 & 0x400000000000L) != 0L)
               {
                  matchedToken.kind = 174;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_01 = jjoldActive_01 & 0x90000000000000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x800024L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x80000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 = 0L;
               break;
            case 108: 
               if ((jjoldActive_01 & 0x2000000000L) != 0L)
               {
                  matchedToken.kind = 101;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_00 = jjoldActive_00 & 0x20000000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x4000000000040000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x8000000000000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_03 = 0L;
               break;
            case 105: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x100000000000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x10000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 104: 
               if (((jjnewActive_01 = jjoldActive_01 & 0x4000000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 101: 
               if ((jjoldActive_00 & 0x2000000L) != 0L)
               {
                  matchedToken.kind = 25;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_00 & 0x800000000000000L) != 0L)
               {
                  matchedToken.kind = 59;
                  jjmatchedPos = 9;
               }
               else if ((jjoldActive_02 & 0x40L) != 0L)
               {
                  matchedToken.kind = 134;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_02 & 0x10000000000000L) != 0L)
               {
                  matchedToken.kind = 180;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_03 & 0x2L) != 0L)
               {
                  matchedToken.kind = 193;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_00 = jjoldActive_00 & 0x2000000000000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x20000000020008L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x2001000L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x1000000L)) == 0L)
                  break StartNfaLoop;
               break;
            default : 
               break StartNfaLoop;
         }
         try { curChar = input_stream.readChar(); }
         catch(java.io.IOException e) {
            StopStringLiteralDfa_0(9, jjnewActive_00, jjnewActive_01, jjnewActive_02, jjnewActive_03); 
            curPos = 10;
            throw e;
         }
         jjMoveStringLiteralDfa10_0();
         return;
      }
      jjStartNfa_0(8, jjoldActive_00, jjoldActive_01, jjoldActive_02, jjoldActive_03); 
      curPos = 10;
      return;
    }
    jjmatchedPos = 9;
    curPos = 10;
    curChar = input_stream.readChar();
    jjnewStateCnt = jjstartStateSet.length;
    jjMoveNfa_0(jjstartStateSet, jjstateSet2);
    if (jjcurKind != 2147483647)
    {
       matchedToken.kind = jjcurKind;
       jjmatchedPos = 10;
       jjcurKind = 2147483647;
    }
    curPos = 11;
    return;
   }
}
static private final void jjMoveStringLiteralDfa10_0() throws java.io.IOException
{
   ReturnLoop:
   for (;;)
   {
    MainLoop:
    for (;;)
    {
      StartNfaLoop:
      for (;;)
      { 
         switch(curChar)
         {
            case 100: 
               if (((jjoldActive_01 = jjnewActive_01 & 0x10000000000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 99: 
               if (((jjoldActive_02 = jjnewActive_02 & 0x4L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 83: 
               if (((jjoldActive_03 = jjnewActive_03 & 0x4000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 =                jjoldActive_02 = 0L;
               break;
            case 82: 
               if (((jjoldActive_01 = jjnewActive_01 & 0x100000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 76: 
               if (((jjoldActive_02 = jjnewActive_02 & 0x200L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 73: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x2000000000000000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x20L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 120: 
               if ((jjnewActive_01 & 0x20000000000000L) != 0L)
               {
                  matchedToken.kind = 117;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            case 119: 
               if ((jjnewActive_03 & 0x1000000L) != 0L)
               {
                  matchedToken.kind = 216;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            case 118: 
               if (((jjoldActive_03 = jjnewActive_03 & 0x4000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 =                jjoldActive_02 = 0L;
               break;
            case 117: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x100000000000000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x8000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 116: 
               if ((jjnewActive_01 & 0x4000000000L) != 0L)
               {
                  matchedToken.kind = 102;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_00 = jjnewActive_00 & 0x400000000000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x10800000L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x80000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_01 = 0L;
               break;
            case 114: 
               if ((jjnewActive_00 & 0x80000000000L) != 0L)
               {
                  matchedToken.kind = 43;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_02 & 0x10000L) != 0L)
               {
                  matchedToken.kind = 144;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_03 & 0x8000L) != 0L)
               {
                  matchedToken.kind = 207;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_01 = jjnewActive_01 & 0x80000028000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x2005008L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x800L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 = 0L;
               break;
            case 112: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x20000000000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_01 =                jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 111: 
               if (((jjoldActive_01 = jjnewActive_01 & 0x4000000010000000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x1000000000000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_03 = 0L;
               break;
            case 110: 
               if ((jjnewActive_00 & 0x100000L) != 0L)
               {
                  matchedToken.kind = 20;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_02 & 0x20000L) != 0L)
               {
                  matchedToken.kind = 145;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_02 & 0x40000L) != 0L)
               {
                  matchedToken.kind = 146;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_02 & 0x200000L) != 0L)
               {
                  matchedToken.kind = 149;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_03 & 0x100000L) != 0L)
               {
                  matchedToken.kind = 212;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_03 & 0x800000L) != 0L)
               {
                  matchedToken.kind = 215;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_00 = jjnewActive_00 & 0x8000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x8L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x2000L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x1000L)) == 0L)
                  break StartNfaLoop;
               break;
            case 109: 
               if ((jjnewActive_01 & 0x8000000000L) != 0L)
               {
                  matchedToken.kind = 103;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            case 108: 
               if (((jjoldActive_01 = jjnewActive_01 & 0x8000000000000400L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x1L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_03 = 0L;
               break;
            case 101: 
               if ((jjnewActive_00 & 0x20000000000L) != 0L)
               {
                  matchedToken.kind = 41;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_01 & 0x40000L) != 0L)
               {
                  matchedToken.kind = 82;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_02 & 0x8000000000000000L) != 0L)
               {
                  matchedToken.kind = 191;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_03 & 0x10L) != 0L)
               {
                  matchedToken.kind = 196;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_01 = jjnewActive_01 & 0x80400000082000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x1000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_03 = 0L;
               break;
            default : 
               break StartNfaLoop;
         }
         try { curChar = input_stream.readChar(); }
         catch(java.io.IOException e) {
            StopStringLiteralDfa_0(10, jjoldActive_00, jjoldActive_01, jjoldActive_02, jjoldActive_03); 
            curPos = 11;
            throw e;
         }
         jjMoveStringLiteralDfa11_0();
         return;
      }
      jjStartNfa_0(9, jjnewActive_00, jjnewActive_01, jjnewActive_02, jjnewActive_03); 
      curPos = 11;
      return;
    }
    jjmatchedPos = 10;
    curPos = 11;
    curChar = input_stream.readChar();
    jjnewStateCnt = jjstartStateSet.length;
    jjMoveNfa_0(jjstartStateSet, jjstateSet2);
    if (jjcurKind != 2147483647)
    {
       matchedToken.kind = jjcurKind;
       jjmatchedPos = 11;
       jjcurKind = 2147483647;
    }
    curPos = 12;
    return;
   }
}
static private final void jjMoveStringLiteralDfa11_0() throws java.io.IOException
{
   ReturnLoop:
   for (;;)
   {
    MainLoop:
    for (;;)
    {
      StartNfaLoop:
      for (;;)
      { 
         switch(curChar)
         {
            case 100: 
               if (((jjnewActive_03 = jjoldActive_03 & 0x800L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_02 = 0L;
               break;
            case 97: 
               if (((jjnewActive_01 = jjoldActive_01 & 0x100000000L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x84000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_02 = 0L;
               break;
            case 83: 
               if (((jjnewActive_01 = jjoldActive_01 & 0x80400000000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 76: 
               if (((jjnewActive_01 = jjoldActive_01 & 0x400L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 73: 
               if (((jjnewActive_02 = jjoldActive_02 & 0x2000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_03 = 0L;
               break;
            case 121: 
               if ((jjoldActive_02 & 0x4L) != 0L)
               {
                  matchedToken.kind = 130;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            case 116: 
               if ((jjoldActive_02 & 0x8000000L) != 0L)
               {
                  matchedToken.kind = 155;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_01 = jjoldActive_01 & 0x20000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 115: 
               if ((jjoldActive_00 & 0x100000000000000L) != 0L)
               {
                  matchedToken.kind = 56;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_00 = jjoldActive_00 & 0x8000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x8L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x1000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_02 = 0L;
               break;
            case 114: 
               if ((jjoldActive_01 & 0x4000000000000000L) != 0L)
               {
                  matchedToken.kind = 126;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_02 & 0x1000000000000000L) != 0L)
               {
                  matchedToken.kind = 188;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_01 = jjoldActive_01 & 0x80000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 112: 
               if (((jjnewActive_02 = jjoldActive_02 & 0x2001000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_03 = 0L;
               break;
            case 111: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x20000000000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x8000000000000000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x1L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_03 = 0L;
               break;
            case 110: 
               if ((jjoldActive_01 & 0x10000000L) != 0L)
               {
                  matchedToken.kind = 92;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_00 = jjoldActive_00 & 0x2000000000000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x2000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x1000020L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_03 = 0L;
               break;
            case 105: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x400000000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x8000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x200L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_03 = 0L;
               break;
            case 101: 
               if ((jjoldActive_01 & 0x80000000000L) != 0L)
               {
                  matchedToken.kind = 107;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_02 & 0x8L) != 0L)
               {
                  matchedToken.kind = 131;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_02 & 0x4000L) != 0L)
               {
                  matchedToken.kind = 142;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_02 & 0x10000000L) != 0L)
               {
                  matchedToken.kind = 156;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_01 = jjoldActive_01 & 0x10000000000000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x800000L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x4000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 = 0L;
               break;
            default : 
               break StartNfaLoop;
         }
         try { curChar = input_stream.readChar(); }
         catch(java.io.IOException e) {
            StopStringLiteralDfa_0(11, jjnewActive_00, jjnewActive_01, jjnewActive_02, jjnewActive_03); 
            curPos = 12;
            throw e;
         }
         jjMoveStringLiteralDfa12_0();
         return;
      }
      jjStartNfa_0(10, jjoldActive_00, jjoldActive_01, jjoldActive_02, jjoldActive_03); 
      curPos = 12;
      return;
    }
    jjmatchedPos = 11;
    curPos = 12;
    curChar = input_stream.readChar();
    jjnewStateCnt = jjstartStateSet.length;
    jjMoveNfa_0(jjstartStateSet, jjstateSet2);
    if (jjcurKind != 2147483647)
    {
       matchedToken.kind = jjcurKind;
       jjmatchedPos = 12;
       jjcurKind = 2147483647;
    }
    curPos = 13;
    return;
   }
}
static private final void jjMoveStringLiteralDfa12_0() throws java.io.IOException
{
   ReturnLoop:
   for (;;)
   {
    MainLoop:
    for (;;)
    {
      StartNfaLoop:
      for (;;)
      { 
         switch(curChar)
         {
            case 100: 
               if ((jjnewActive_01 & 0x8000L) != 0L)
               {
                  matchedToken.kind = 79;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            case 120: 
               if ((jjnewActive_01 & 0x10000000000000L) != 0L)
               {
                  matchedToken.kind = 116;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            case 116: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x2000000000000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x80000L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x80000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_02 = 0L;
               break;
            case 115: 
               if (((jjoldActive_01 = jjnewActive_01 & 0x2000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x1000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_03 = 0L;
               break;
            case 114: 
               if ((jjnewActive_01 & 0x8000000000000000L) != 0L)
               {
                  matchedToken.kind = 127;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjnewActive_02 & 0x1L) != 0L)
               {
                  matchedToken.kind = 128;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_02 = jjnewActive_02 & 0x800000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 111: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x400000000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x8L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x2001000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_03 = 0L;
               break;
            case 110: 
               if (((jjoldActive_01 = jjnewActive_01 & 0x100000000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x2000L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x4000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 = 0L;
               break;
            case 109: 
               if (((jjoldActive_02 = jjnewActive_02 & 0x200L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 108: 
               if ((jjnewActive_03 & 0x4000L) != 0L)
               {
                  matchedToken.kind = 206;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_00 = jjnewActive_00 & 0x20000000000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_01 =                jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 105: 
               if (((jjoldActive_01 = jjnewActive_01 & 0x400L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x800L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_02 = 0L;
               break;
            case 102: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x8000000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x20L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x1000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_01 = 0L;
               break;
            case 101: 
               if (((jjoldActive_01 = jjnewActive_01 & 0x80400000020000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            default : 
               break StartNfaLoop;
         }
         try { curChar = input_stream.readChar(); }
         catch(java.io.IOException e) {
            StopStringLiteralDfa_0(12, jjoldActive_00, jjoldActive_01, jjoldActive_02, jjoldActive_03); 
            curPos = 13;
            throw e;
         }
         jjMoveStringLiteralDfa13_0();
         return;
      }
      jjStartNfa_0(11, jjnewActive_00, jjnewActive_01, jjnewActive_02, jjnewActive_03); 
      curPos = 13;
      return;
    }
    jjmatchedPos = 12;
    curPos = 13;
    curChar = input_stream.readChar();
    jjnewStateCnt = jjstartStateSet.length;
    jjMoveNfa_0(jjstartStateSet, jjstateSet2);
    if (jjcurKind != 2147483647)
    {
       matchedToken.kind = jjcurKind;
       jjmatchedPos = 13;
       jjcurKind = 2147483647;
    }
    curPos = 14;
    return;
   }
}
static private final void jjMoveStringLiteralDfa13_0() throws java.io.IOException
{
   ReturnLoop:
   for (;;)
   {
    MainLoop:
    for (;;)
    {
      StartNfaLoop:
      for (;;)
      { 
         switch(curChar)
         {
            case 97: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x20000000000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_01 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 120: 
               if ((jjoldActive_01 & 0x20000L) != 0L)
               {
                  matchedToken.kind = 81;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            case 116: 
               if ((jjoldActive_01 & 0x400000000000L) != 0L)
               {
                  matchedToken.kind = 110;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_01 & 0x80000000000000L) != 0L)
               {
                  matchedToken.kind = 119;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_02 = jjoldActive_02 & 0x2000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_03 = 0L;
               break;
            case 115: 
               if (((jjnewActive_03 = jjoldActive_03 & 0x4000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_02 = 0L;
               break;
            case 114: 
               if ((jjoldActive_01 & 0x8L) != 0L)
               {
                  matchedToken.kind = 67;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            case 112: 
               if (((jjnewActive_02 = jjoldActive_02 & 0x800000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_03 = 0L;
               break;
            case 111: 
               if ((jjoldActive_02 & 0x20L) != 0L)
               {
                  matchedToken.kind = 133;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_00 = jjoldActive_00 & 0x8000000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x1000000L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x1000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_01 = 0L;
               break;
            case 110: 
               if ((jjoldActive_00 & 0x400000000000L) != 0L)
               {
                  matchedToken.kind = 46;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_03 = jjoldActive_03 & 0x800L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_02 = 0L;
               break;
            case 108: 
               if (((jjnewActive_02 = jjoldActive_02 & 0x2001000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_03 = 0L;
               break;
            case 105: 
               if (((jjnewActive_01 = jjoldActive_01 & 0x2000L)|
                  (jjnewActive_02 = jjoldActive_02 & 0x200L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x80000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 = 0L;
               break;
            case 103: 
               if (((jjnewActive_01 = jjoldActive_01 & 0x100000400L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 101: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x2000000000000000L)|
                  (jjnewActive_01 = jjoldActive_01 & 0x80000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            default : 
               break StartNfaLoop;
         }
         try { curChar = input_stream.readChar(); }
         catch(java.io.IOException e) {
            StopStringLiteralDfa_0(13, jjnewActive_00, jjnewActive_01, jjnewActive_02, jjnewActive_03); 
            curPos = 14;
            throw e;
         }
         jjMoveStringLiteralDfa14_0();
         return;
      }
      jjStartNfa_0(12, jjoldActive_00, jjoldActive_01, jjoldActive_02, jjoldActive_03); 
      curPos = 14;
      return;
    }
    jjmatchedPos = 13;
    curPos = 14;
    curChar = input_stream.readChar();
    jjnewStateCnt = jjstartStateSet.length;
    jjMoveNfa_0(jjstartStateSet, jjstateSet2);
    if (jjcurKind != 2147483647)
    {
       matchedToken.kind = jjcurKind;
       jjmatchedPos = 14;
       jjcurKind = 2147483647;
    }
    curPos = 15;
    return;
   }
}
static private final void jjMoveStringLiteralDfa14_0() throws java.io.IOException
{
   ReturnLoop:
   for (;;)
   {
    MainLoop:
    for (;;)
    {
      StartNfaLoop:
      for (;;)
      { 
         switch(curChar)
         {
            case 97: 
               if (((jjoldActive_02 = jjnewActive_02 & 0x2001000L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x800L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 = 0L;
               break;
            case 120: 
               if ((jjnewActive_01 & 0x80000L) != 0L)
               {
                  matchedToken.kind = 83;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            case 116: 
               if ((jjnewActive_02 & 0x200L) != 0L)
               {
                  matchedToken.kind = 137;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_00 = jjnewActive_00 & 0x20000000000000L)|
                  (jjoldActive_01 = jjnewActive_01 & 0x2000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 114: 
               if ((jjnewActive_02 & 0x1000000L) != 0L)
               {
                  matchedToken.kind = 152;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_00 = jjnewActive_00 & 0x2000000008000000L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x1000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_01 =                jjoldActive_02 = 0L;
               break;
            case 111: 
               if (((jjoldActive_02 = jjnewActive_02 & 0x800000L)|
                  (jjoldActive_03 = jjnewActive_03 & 0x4080000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 = 0L;
               break;
            case 104: 
               if (((jjoldActive_01 = jjnewActive_01 & 0x400L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_02 =                jjoldActive_03 = 0L;
               break;
            case 101: 
               if ((jjnewActive_01 & 0x100000000L) != 0L)
               {
                  matchedToken.kind = 96;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjoldActive_02 = jjnewActive_02 & 0x2000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            default : 
               break StartNfaLoop;
         }
         try { curChar = input_stream.readChar(); }
         catch(java.io.IOException e) {
            StopStringLiteralDfa_0(14, jjoldActive_00, jjoldActive_01, jjoldActive_02, jjoldActive_03); 
            curPos = 15;
            throw e;
         }
         jjMoveStringLiteralDfa15_0();
         return;
      }
      jjStartNfa_0(13, jjnewActive_00, jjnewActive_01, jjnewActive_02, jjnewActive_03); 
      curPos = 15;
      return;
    }
    jjmatchedPos = 14;
    curPos = 15;
    curChar = input_stream.readChar();
    jjnewStateCnt = jjstartStateSet.length;
    jjMoveNfa_0(jjstartStateSet, jjstateSet2);
    if (jjcurKind != 2147483647)
    {
       matchedToken.kind = jjcurKind;
       jjmatchedPos = 15;
       jjcurKind = 2147483647;
    }
    curPos = 16;
    return;
   }
}
static private final void jjMoveStringLiteralDfa15_0() throws java.io.IOException
{
   ReturnLoop:
   for (;;)
   {
    MainLoop:
    for (;;)
    {
      StartNfaLoop:
      for (;;)
      { 
         switch(curChar)
         {
            case 121: 
               if ((jjoldActive_01 & 0x2000L) != 0L)
               {
                  matchedToken.kind = 77;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            case 116: 
               if ((jjoldActive_01 & 0x400L) != 0L)
               {
                  matchedToken.kind = 74;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_02 = jjoldActive_02 & 0x2001000L)|
                  (jjnewActive_03 = jjoldActive_03 & 0x800L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 = 0L;
               break;
            case 114: 
               if ((jjoldActive_03 & 0x4000000L) != 0L)
               {
                  matchedToken.kind = 218;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               if (((jjnewActive_02 = jjoldActive_02 & 0x2000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_03 = 0L;
               break;
            case 112: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x2000000000000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_01 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 111: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x20000000000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_01 =                jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            case 110: 
               if ((jjoldActive_03 & 0x80000L) != 0L)
               {
                  matchedToken.kind = 211;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            case 109: 
               if ((jjoldActive_00 & 0x8000000L) != 0L)
               {
                  matchedToken.kind = 27;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_03 & 0x1000L) != 0L)
               {
                  matchedToken.kind = 204;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            case 108: 
               if (((jjnewActive_02 = jjoldActive_02 & 0x800000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_01 =                jjnewActive_03 = 0L;
               break;
            default : 
               break StartNfaLoop;
         }
         try { curChar = input_stream.readChar(); }
         catch(java.io.IOException e) {
            StopStringLiteralDfa_0(15, jjnewActive_00, jjnewActive_01, jjnewActive_02, jjnewActive_03); 
            curPos = 16;
            throw e;
         }
         jjMoveStringLiteralDfa16_0();
         return;
      }
      jjStartNfa_0(14, jjoldActive_00, jjoldActive_01, jjoldActive_02, jjoldActive_03); 
      curPos = 16;
      return;
    }
    jjmatchedPos = 15;
    curPos = 16;
    curChar = input_stream.readChar();
    jjnewStateCnt = jjstartStateSet.length;
    jjMoveNfa_0(jjstartStateSet, jjstateSet2);
    if (jjcurKind != 2147483647)
    {
       matchedToken.kind = jjcurKind;
       jjmatchedPos = 16;
       jjcurKind = 2147483647;
    }
    curPos = 17;
    return;
   }
}
static private final void jjMoveStringLiteralDfa16_0() throws java.io.IOException
{
   ReturnLoop:
   for (;;)
   {
    MainLoop:
    for (;;)
    {
      StartNfaLoop:
      for (;;)
      { 
         switch(curChar)
         {
            case 97: 
               if (((jjoldActive_02 = jjnewActive_02 & 0x800000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 114: 
               if ((jjnewActive_00 & 0x20000000000000L) != 0L)
               {
                  matchedToken.kind = 53;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            case 112: 
               if (((jjoldActive_02 = jjnewActive_02 & 0x2000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 =                jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 111: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x2000000000000000L)|
                  (jjoldActive_02 = jjnewActive_02 & 0x2001000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_01 =                jjoldActive_03 = 0L;
               break;
            case 101: 
               if ((jjnewActive_03 & 0x800L) != 0L)
               {
                  matchedToken.kind = 203;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            default : 
               break StartNfaLoop;
         }
         try { curChar = input_stream.readChar(); }
         catch(java.io.IOException e) {
            StopStringLiteralDfa_0(16, jjoldActive_00, jjoldActive_01, jjoldActive_02, jjoldActive_03); 
            curPos = 17;
            throw e;
         }
         jjMoveStringLiteralDfa17_0();
         return;
      }
      jjStartNfa_0(15, jjnewActive_00, jjnewActive_01, jjnewActive_02, jjnewActive_03); 
      curPos = 17;
      return;
    }
    jjmatchedPos = 16;
    curPos = 17;
    curChar = input_stream.readChar();
    jjnewStateCnt = jjstartStateSet.length;
    jjMoveNfa_0(jjstartStateSet, jjstateSet2);
    if (jjcurKind != 2147483647)
    {
       matchedToken.kind = jjcurKind;
       jjmatchedPos = 17;
       jjcurKind = 2147483647;
    }
    curPos = 18;
    return;
   }
}
static private final void jjMoveStringLiteralDfa17_0() throws java.io.IOException
{
   ReturnLoop:
   for (;;)
   {
    MainLoop:
    for (;;)
    {
      StartNfaLoop:
      for (;;)
      { 
         switch(curChar)
         {
            case 116: 
               if (((jjnewActive_02 = jjoldActive_02 & 0x800000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_03 = 0L;
               break;
            case 114: 
               if ((jjoldActive_02 & 0x1000L) != 0L)
               {
                  matchedToken.kind = 140;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               else if ((jjoldActive_02 & 0x2000000L) != 0L)
               {
                  matchedToken.kind = 153;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            case 111: 
               if (((jjnewActive_02 = jjoldActive_02 & 0x2000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 =                jjnewActive_03 = 0L;
               break;
            case 108: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x2000000000000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_02 =                jjnewActive_03 = 0L;
               break;
            default : 
               break StartNfaLoop;
         }
         try { curChar = input_stream.readChar(); }
         catch(java.io.IOException e) {
            StopStringLiteralDfa_0(17, jjnewActive_00, 0L, jjnewActive_02, jjnewActive_03); 
            curPos = 18;
            throw e;
         }
         jjMoveStringLiteralDfa18_0();
         return;
      }
      jjStartNfa_0(16, jjoldActive_00, 0L, jjoldActive_02, jjoldActive_03); 
      curPos = 18;
      return;
    }
    jjmatchedPos = 17;
    curPos = 18;
    curChar = input_stream.readChar();
    jjnewStateCnt = jjstartStateSet.length;
    jjMoveNfa_0(jjstartStateSet, jjstateSet2);
    if (jjcurKind != 2147483647)
    {
       matchedToken.kind = jjcurKind;
       jjmatchedPos = 18;
       jjcurKind = 2147483647;
    }
    curPos = 19;
    return;
   }
}
static private final void jjMoveStringLiteralDfa18_0() throws java.io.IOException
{
   ReturnLoop:
   for (;;)
   {
    MainLoop:
    for (;;)
    {
      StartNfaLoop:
      for (;;)
      { 
         switch(curChar)
         {
            case 97: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x2000000000000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_02 = 0L;
               break;
            case 111: 
               if (((jjoldActive_02 = jjnewActive_02 & 0x800000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 = 0L;
               break;
            case 108: 
               if (((jjoldActive_02 = jjnewActive_02 & 0x2000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 = 0L;
               break;
            default : 
               break StartNfaLoop;
         }
         try { curChar = input_stream.readChar(); }
         catch(java.io.IOException e) {
            StopStringLiteralDfa_0(18, jjoldActive_00, 0L, jjoldActive_02, 0L);
            curPos = 19;
            throw e;
         }
         jjMoveStringLiteralDfa19_0();
         return;
      }
      jjStartNfa_0(17, jjnewActive_00, 0L, jjnewActive_02, 0L);
      curPos = 19;
      return;
    }
   }
}
static private final void jjMoveStringLiteralDfa19_0() throws java.io.IOException
{
   ReturnLoop:
   for (;;)
   {
    MainLoop:
    for (;;)
    {
      StartNfaLoop:
      for (;;)
      { 
         switch(curChar)
         {
            case 97: 
               if (((jjnewActive_02 = jjoldActive_02 & 0x2000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 = 0L;
               break;
            case 116: 
               if (((jjnewActive_00 = jjoldActive_00 & 0x2000000000000000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_02 = 0L;
               break;
            case 114: 
               if ((jjoldActive_02 & 0x800000L) != 0L)
               {
                  matchedToken.kind = 151;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            default : 
               break StartNfaLoop;
         }
         try { curChar = input_stream.readChar(); }
         catch(java.io.IOException e) {
            StopStringLiteralDfa_0(19, jjnewActive_00, 0L, jjnewActive_02, 0L);
            curPos = 20;
            throw e;
         }
         jjMoveStringLiteralDfa20_0();
         return;
      }
      jjStartNfa_0(18, jjoldActive_00, 0L, jjoldActive_02, 0L);
      curPos = 20;
      return;
    }
    jjmatchedPos = 19;
    curPos = 20;
    curChar = input_stream.readChar();
    jjnewStateCnt = jjstartStateSet.length;
    jjMoveNfa_0(jjstartStateSet, jjstateSet2);
    if (jjcurKind != 2147483647)
    {
       matchedToken.kind = jjcurKind;
       jjmatchedPos = 20;
       jjcurKind = 2147483647;
    }
    curPos = 21;
    return;
   }
}
static private final void jjMoveStringLiteralDfa20_0() throws java.io.IOException
{
   ReturnLoop:
   for (;;)
   {
    MainLoop:
    for (;;)
    {
      StartNfaLoop:
      for (;;)
      { 
         switch(curChar)
         {
            case 116: 
               if (((jjoldActive_02 = jjnewActive_02 & 0x2000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_00 = 0L;
               break;
            case 111: 
               if (((jjoldActive_00 = jjnewActive_00 & 0x2000000000000000L)) == 0L)
                  break StartNfaLoop;
               jjoldActive_02 = 0L;
               break;
            default : 
               break StartNfaLoop;
         }
         try { curChar = input_stream.readChar(); }
         catch(java.io.IOException e) {
            StopStringLiteralDfa_0(20, jjoldActive_00, 0L, jjoldActive_02, 0L);
            curPos = 21;
            throw e;
         }
         jjMoveStringLiteralDfa21_0();
         return;
      }
      jjStartNfa_0(19, jjnewActive_00, 0L, jjnewActive_02, 0L);
      curPos = 21;
      return;
    }
   }
}
static private final void jjMoveStringLiteralDfa21_0() throws java.io.IOException
{
   ReturnLoop:
   for (;;)
   {
    MainLoop:
    for (;;)
    {
      StartNfaLoop:
      for (;;)
      { 
         switch(curChar)
         {
            case 114: 
               if ((jjoldActive_00 & 0x2000000000000000L) != 0L)
               {
                  matchedToken.kind = 61;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            case 111: 
               if (((jjnewActive_02 = jjoldActive_02 & 0x2000L)) == 0L)
                  break StartNfaLoop;
               jjnewActive_00 = 0L;
               break;
            default : 
               break StartNfaLoop;
         }
         try { curChar = input_stream.readChar(); }
         catch(java.io.IOException e) {
            StopStringLiteralDfa_0(21, jjnewActive_00, 0L, jjnewActive_02, 0L);
            curPos = 22;
            throw e;
         }
         jjMoveStringLiteralDfa22_0();
         return;
      }
      jjStartNfa_0(20, jjoldActive_00, 0L, jjoldActive_02, 0L);
      curPos = 22;
      return;
    }
    jjmatchedPos = 21;
    curPos = 22;
    curChar = input_stream.readChar();
    jjnewStateCnt = jjstartStateSet.length;
    jjMoveNfa_0(jjstartStateSet, jjstateSet2);
    if (jjcurKind != 2147483647)
    {
       matchedToken.kind = jjcurKind;
       jjmatchedPos = 22;
       jjcurKind = 2147483647;
    }
    curPos = 23;
    return;
   }
}
static private final void jjMoveStringLiteralDfa22_0() throws java.io.IOException
{
   ReturnLoop:
   for (;;)
   {
    MainLoop:
    for (;;)
    {
      StartNfaLoop:
      for (;;)
      { 
         switch(curChar)
         {
            case 114: 
               if ((jjnewActive_02 & 0x2000L) != 0L)
               {
                  matchedToken.kind = 141;
                  jjstartStateSet = jjstates2;
                  break MainLoop;
               }
               break StartNfaLoop;
            default : 
               break StartNfaLoop;
         }
      }
      jjStartNfa_0(21, jjnewActive_00, 0L, jjnewActive_02, 0L);
      curPos = 23;
      return;
    }
    jjmatchedPos = 22;
    curPos = 23;
    curChar = input_stream.readChar();
    jjnewStateCnt = jjstartStateSet.length;
    jjMoveNfa_0(jjstartStateSet, jjstateSet2);
    if (jjcurKind != 2147483647)
    {
       matchedToken.kind = jjcurKind;
       jjmatchedPos = 23;
       jjcurKind = 2147483647;
    }
    curPos = 24;
    return;
   }
}
static final int[] jjstates0 = { 2, };
static final int[] jjstates1 = { 1, 2, 3, };
static final int[] jjstates2 = { 5, };
static final int[] jjstates3 = { 7, 8, 10, };
static final int[] jjstates4 = { 7, 8, 12, 10, };
static final int[] jjstates5 = { 12, };
static final int[] jjstates6 = { 14, };
static final int[] jjstates7 = { 9, 11, 13, };
static final int[] jjstates8 = { 19, 20, };
static final int[] jjstates9 = { 19, };
static final int[] jjstates10 = { 18, 19, };
static final int[] jjstates11 = { 16, 17, 20, };
static final int[] jjstates12 = { 16, };
static final int[] jjstates13 = { 23, };
static final int[] jjstates14 = { 22, 23, };
static final int[] jjstates15 = { 25, };
static final int[] jjstates16 = { 31, 20, };
static final int[] jjstates17 = { 31, };
static final int[] jjstates18 = { 30, 31, };
static final int[] jjstates19 = { 28, 29, 20, };
static final int[] jjstates20 = { 26, 27, };
static final int[] jjstates21 = { 35, 20, };
static final int[] jjstates22 = { 35, };
static final int[] jjstates23 = { 34, 35, };
static final int[] jjstates24 = { 32, 33, 20, };
static final int[] jjstates25 = { 25, 26, 15, 32, };
static final int[] jjstates26 = { 25, 26, 27, 32, 33, 20, };
static final int[] jjallInitStates_0 = { 0, 4, 6, 15, 21, 24, 36, };
static final int[] jjstates27 = { 6, };
static final int[] jjstates28 = { 0, };
static final int[] jjstates29 = { 24, };
static final int[] jjstates30 = { 15, };
static final int[] jjstates31 = { 36, };
static final int[] jjstates32 = { 4, };
static final int[] jjstates33 = { 4, 21, };
static final int[] jjstates34 = { 5, 22, 23, };
static final int[][] jjinitStates_0 = {
jjallInitStates_0, null, null, null, null, null, 
null, null, null, null, null, 
null, null, null, null, null, 
null, null, null, null, null, 
null, null, null, null, null, 
null, null, null, null, null, 
null, null, null, jjstates27, jjstates28, 
null, null, null, null, null, 
null, null, jjstates29, null, jjstates29, 
jjstates30, null, jjstates31, jjstates31, jjstates31, 
jjstates31, jjstates31, jjstates31, jjstates31, jjstates31, 
jjstates31, jjstates31, null, null, null, 
null, null, null, null, jjstates32, 
jjstates32, jjstates32, jjstates32, jjstates33, jjstates32, 
jjstates32, jjstates32, jjstates32, jjstates32, jjstates32, 
jjstates32, jjstates32, jjstates32, jjstates32, jjstates32, 
jjstates32, jjstates32, jjstates32, jjstates32, jjstates32, 
jjstates32, jjstates32, jjstates32, jjstates32, jjstates32, 
null, null, null, null, null, 
null, jjstates32, jjstates32, jjstates32, jjstates32, 
jjstates33, jjstates32, jjstates32, jjstates32, jjstates32, 
jjstates32, jjstates32, jjstates32, jjstates32, jjstates32, 
jjstates32, jjstates32, jjstates32, jjstates32, jjstates32, 
jjstates32, jjstates32, jjstates32, jjstates32, jjstates32, 
jjstates32, jjstates32, null, null, null, 
null, null, };

public static final String[] jjstrLiteralImages = {
null, null, null, null, null, null, "\143\150\151\154\144\162\145\156", 
"\124\122\125\105", "\106\101\114\123\105", "\133", "\54", "\135", "\104\105\106", "\125\123\105", 
"\122\117\125\124\105", "\124\117", "\56", "\101\156\143\150\157\162", "\165\162\154", 
"\160\141\162\141\155\145\164\145\162", "\144\145\163\143\162\151\160\164\151\157\156", 
"\142\142\157\170\103\145\156\164\145\162", "\142\142\157\170\123\151\172\145", "\173", "\175", 
"\101\160\160\145\141\162\141\156\143\145", "\155\141\164\145\162\151\141\154", 
"\164\145\170\164\165\162\145\124\162\141\156\163\146\157\162\155", "\164\145\170\164\165\162\145", "\101\165\144\151\157\103\154\151\160", 
"\154\157\157\160", "\160\151\164\143\150", "\163\164\141\162\164\124\151\155\145", 
"\163\164\157\160\124\151\155\145", "\102\141\143\153\147\162\157\165\156\144", "\142\141\143\153\125\162\154", 
"\142\157\164\164\157\155\125\162\154", "\146\162\157\156\164\125\162\154", "\154\145\146\164\125\162\154", 
"\162\151\147\150\164\125\162\154", "\164\157\160\125\162\154", "\147\162\157\165\156\144\101\156\147\154\145", 
"\163\153\171\101\156\147\154\145", "\147\162\157\165\156\144\103\157\154\157\162", 
"\163\153\171\103\157\154\157\162", "\102\151\154\154\142\157\141\162\144", 
"\141\170\151\163\117\146\122\157\164\141\164\151\157\156", "\102\157\170", "\163\151\172\145", "\103\157\154\154\151\163\151\157\156", 
"\143\157\154\154\151\144\145", "\103\157\154\157\162", "\143\157\154\157\162", 
"\103\157\154\157\162\111\156\164\145\162\160\157\154\141\164\157\162", "\103\157\156\145", "\150\145\151\147\150\164", 
"\142\157\164\164\157\155\122\141\144\151\165\163", "\163\151\144\145", "\142\157\164\164\157\155", 
"\103\157\157\162\144\151\156\141\164\145", "\160\157\151\156\164", 
"\103\157\157\162\144\151\156\141\164\145\111\156\164\145\162\160\157\154\141\164\157\162", "\153\145\171", "\153\145\171\126\141\154\165\145", 
"\103\171\154\151\156\144\145\162", "\164\157\160", "\162\141\144\151\165\163", 
"\103\171\154\151\156\144\145\162\123\145\156\163\157\162", "\155\151\156\101\156\147\154\145", "\155\141\170\101\156\147\154\145", 
"\145\156\141\142\154\145\144", "\144\151\163\153\101\156\147\154\145", "\157\146\146\163\145\164", 
"\141\165\164\157\117\146\146\163\145\164", "\104\151\162\145\143\164\151\157\156\141\154\114\151\147\150\164", 
"\157\156", "\151\156\164\145\156\163\151\164\171", 
"\141\155\142\151\145\156\164\111\156\164\145\156\163\151\164\171", "\144\151\162\145\143\164\151\157\156", 
"\105\154\145\166\141\164\151\157\156\107\162\151\144", "\143\143\167", "\143\157\154\157\162\120\145\162\126\145\162\164\145\170", 
"\143\162\145\141\163\145\101\156\147\154\145", "\156\157\162\155\141\154\120\145\162\126\145\162\164\145\170", 
"\163\157\154\151\144", "\170\104\151\155\145\156\163\151\157\156", 
"\170\123\160\141\143\151\156\147", "\172\104\151\155\145\156\163\151\157\156", 
"\172\123\160\141\143\151\156\147", "\105\170\164\162\165\163\151\157\156", "\142\145\147\151\156\103\141\160", 
"\145\156\144\103\141\160", "\143\162\157\163\163\123\145\143\164\151\157\156", "\163\160\151\156\145", 
"\106\157\147", "\146\157\147\124\171\160\145", 
"\166\151\163\151\142\151\154\151\164\171\122\141\156\147\145", "\106\157\156\164\123\164\171\154\145", "\152\165\163\164\151\146\171", 
"\146\141\155\151\154\171", "\163\164\171\154\145", "\150\157\162\151\172\157\156\164\141\154", 
"\154\145\146\164\124\157\122\151\147\150\164", "\164\157\160\124\157\102\157\164\164\157\155", 
"\154\141\156\147\165\141\147\145", "\163\160\141\143\151\156\147", "\107\162\157\165\160", 
"\111\155\141\147\145\124\145\170\164\165\162\145", "\162\145\160\145\141\164\123", "\162\145\160\145\141\164\124", 
"\111\156\144\145\170\145\144\106\141\143\145\123\145\164", "\143\157\157\162\144", "\156\157\162\155\141\154", 
"\164\145\170\103\157\157\162\144", "\143\157\157\162\144\111\156\144\145\170", 
"\143\157\154\157\162\111\156\144\145\170", "\164\145\170\103\157\157\162\144\111\156\144\145\170", 
"\156\157\162\155\141\154\111\156\144\145\170", "\143\157\156\166\145\170", 
"\111\156\144\145\170\145\144\114\151\156\145\123\145\164", "\111\156\154\151\156\145", "\114\117\104", "\143\145\156\164\145\162", 
"\162\141\156\147\145", "\154\145\166\145\154", "\115\141\164\145\162\151\141\154", 
"\144\151\146\146\165\163\145\103\157\154\157\162", "\163\160\145\143\165\154\141\162\103\157\154\157\162", 
"\145\155\151\163\163\151\166\145\103\157\154\157\162", "\163\150\151\156\151\156\145\163\163", 
"\164\162\141\156\163\160\141\162\145\156\143\171", "\115\157\166\151\145\124\145\170\164\165\162\145", "\163\160\145\145\144", 
"\116\141\166\151\147\141\164\151\157\156\111\156\146\157", "\141\166\141\164\141\162\123\151\172\145", 
"\150\145\141\144\154\151\147\150\164", "\164\171\160\145", 
"\166\151\163\151\142\151\154\151\164\171\114\151\155\151\164", "\116\157\162\155\141\154", "\166\145\143\164\157\162", 
"\116\157\162\155\141\154\111\156\164\145\162\160\157\154\141\164\157\162", 
"\117\162\151\145\156\164\141\164\151\157\156\111\156\164\145\162\160\157\154\141\164\157\162", "\120\151\170\145\154\124\145\170\164\165\162\145", "\151\155\141\147\145", 
"\120\154\141\156\145\123\145\156\163\157\162", "\155\151\156\120\157\163\151\164\151\157\156", 
"\155\141\170\120\157\163\151\164\151\157\156", "\120\157\151\156\164\114\151\147\150\164", 
"\154\157\143\141\164\151\157\156", "\141\164\164\145\156\165\141\164\151\157\156", 
"\120\157\151\156\164\123\145\164", 
"\120\157\163\151\164\151\157\156\111\156\164\145\162\160\157\154\141\164\157\162", "\120\162\157\170\151\155\151\164\171\123\145\156\163\157\162", 
"\123\143\141\154\141\162\111\156\164\145\162\160\157\154\141\164\157\162", "\123\143\162\151\160\164", 
"\144\151\162\145\143\164\117\165\164\160\165\164", "\155\165\163\164\105\166\141\154\165\141\164\145", 
"\145\166\145\156\164\111\156", "\145\166\145\156\164\117\165\164", "\146\151\145\154\144", 
"\123\106\102\157\157\154", "\123\106\103\157\154\157\162", "\123\106\106\154\157\141\164", 
"\123\106\111\156\164\63\62", "\123\106\116\157\144\145", "\123\106\122\157\164\141\164\151\157\156", 
"\123\106\123\164\162\151\156\147", "\123\106\124\151\155\145", "\123\106\126\145\143\62\146", 
"\123\106\126\145\143\63\146", "\115\106\103\157\154\157\162", "\115\106\106\154\157\141\164", 
"\115\106\111\156\164\63\62", "\115\106\116\157\144\145", "\115\106\122\157\164\141\164\151\157\156", 
"\115\106\123\164\162\151\156\147", "\115\106\124\151\155\145", "\115\106\126\145\143\62\146", 
"\115\106\126\145\143\63\146", "\123\157\165\156\144", "\163\160\141\164\151\141\154\151\172\145", 
"\155\141\170\102\141\143\153", "\155\151\156\102\141\143\153", "\155\141\170\106\162\157\156\164", 
"\155\151\156\106\162\157\156\164", "\160\162\151\157\162\151\164\171", "\163\157\165\162\143\145", 
"\123\160\150\145\162\145", "\123\160\150\145\162\145\123\145\156\163\157\162", 
"\123\160\157\164\114\151\147\150\164", "\142\145\141\155\127\151\144\164\150", 
"\143\165\164\117\146\146\101\156\147\154\145", "\123\150\141\160\145", "\141\160\160\145\141\162\141\156\143\145", 
"\147\145\157\155\145\164\162\171", "\123\167\151\164\143\150", "\167\150\151\143\150\103\150\157\151\143\145", 
"\143\150\157\151\143\145", "\124\145\170\164", "\163\164\162\151\156\147", "\154\145\156\147\164\150", 
"\155\141\170\105\170\164\145\156\164", "\146\157\156\164\123\164\171\154\145", 
"\124\145\170\164\165\162\145\103\157\157\162\144\151\156\141\164\145", "\124\145\170\164\165\162\145\124\162\141\156\163\146\157\162\155", 
"\124\151\155\145\123\145\156\163\157\162", "\143\171\143\154\145\111\156\164\145\162\166\141\154", 
"\124\157\165\143\150\123\145\156\163\157\162", "\124\162\141\156\163\146\157\162\155", "\162\157\164\141\164\151\157\156", 
"\163\143\141\154\145", "\163\143\141\154\145\117\162\151\145\156\164\141\164\151\157\156", 
"\164\162\141\156\163\154\141\164\151\157\156", "\126\151\145\167\160\157\151\156\164", "\160\157\163\151\164\151\157\156", 
"\157\162\151\145\156\164\141\164\151\157\156", "\146\151\145\154\144\117\146\126\151\145\167", "\152\165\155\160", 
"\126\151\163\151\142\151\154\151\164\171\123\145\156\163\157\162", "\127\157\162\154\144\111\156\146\157", "\164\151\164\154\145", 
"\151\156\146\157", null, null, null, null, null, };
public static final String[] lexStateNames = {
   "DEFAULT", 
};
static final long[] jjtoToken = 
{
0xffffffffffffffc0L,
0xffffffffffffffffL,
0xffffffffffffffffL,
0x7ffffffffL,
};
static final long[] jjtoSkip = 
{
0x3eL,
0x0L,
0x0L,
0x0L,
};
static private ASCII_CharStream input_stream;
static private int[] jjrounds = new int[37];
static private int[] jjstateSet1 = new int[37];
static private int[] jjstateSet2 = new int[37];
static private int[] jjnextStates;
static int curPos;
static protected char curChar;
static int jjcurKind = 2147483647;
static ParserTokenManager jjme;
public ParserTokenManager(ASCII_CharStream stream)
{
if (input_stream != null)
{
   System.err.println("ERROR: Second call to constructor of static lexer.  You must");
   System.err.println("       either use ReInit() or set the JavaCC option STATIC to false");
   System.err.println("       during lexer generation.");
   throw new Error();
}
input_stream = stream;
jjme = this;
}
public ParserTokenManager(ASCII_CharStream stream, int lexState)
{
if (input_stream != null)
{
   System.err.println("ERROR: Second call to constructor of static lexer.  You must");
   System.err.println("       either use ReInit() or set the JavaCC option STATIC to false");
   System.err.println("       during lexer generation.");
   throw new Error();
}
input_stream = stream;
jjme = this;
   if (lexState >= 1 || lexState < 0)
   {
      System.out.println("Error: Ignoring invalid lexical state : " + lexState + ". Starting lexer in DEFAULT state.");
      curLexState = defaultLexState;
   }
   else
      curLexState = lexState;
}
static public void ReInit(ASCII_CharStream stream)
{
int i;
jjcurKind = 2147483647;
curPos = jjmatchedPos = jjnewStateCnt = jjround = 0;
jjstartStateSet = null;
curChar = (char)0;
jjEOFSeen = false;
curLexState = defaultLexState;
input_stream = stream;
for (i = 37; i-- > 0;)
   jjrounds[i] = 0;
}
static public void ReInit(ASCII_CharStream stream, int lexState)
{
int i;
jjcurKind = 2147483647;
curPos = jjmatchedPos = jjnewStateCnt = jjround = 0;
jjstartStateSet = null;
curChar = (char)0;
jjEOFSeen = false;
   if (lexState >= 1 || lexState < 0)
   {
      System.out.println("Error: Ignoring invalid lexical state : " + lexState + ". Reinitialzing lexer in DEFAULT state.");
      curLexState = defaultLexState;
   }
   else
      curLexState = lexState;
input_stream = stream;
for (i = 37; i-- > 0;)
   jjrounds[i] = 0;
}
static public void SwitchTo(int lexState)
{
   if (lexState >= 1 || lexState < 0)
      System.out.println("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.");
   else
      curLexState = lexState;
}


static int curLexState = 0;
static int defaultLexState = 0;
static int jjnewStateCnt;
static int jjround;
static private boolean jjEOFSeen = false;
static int[] jjtmpStates = jjstateSet1;
static int jjmatchedPos;
static Token matchedToken;
static Token jjspecialToken;
static private int[] jjstartStateSet;

static public Token getNextToken() throws ParseError
{
  matchedToken = new Token();

  EOFLoop : for (;;)
  {   
   try   
   {     
      curChar = input_stream.BeginToken();
   }     
   catch(java.io.IOException e)
   {        
      matchedToken.endLine = matchedToken.beginLine = input_stream.getBeginLine();
      matchedToken.endColumn = matchedToken.beginColumn = input_stream.getBeginColumn();
      matchedToken.kind = 0;
      matchedToken.image = "";
      return matchedToken;
   }

   try
   {
    for (;;)
    {
      matchedToken.kind = 2147483647;
      jjmatchedPos = 0;
      jjMoveStringLiteralDfa0_0();
      while (jjnewStateCnt != 0)
      {
         curChar = input_stream.readChar();
         jjMoveNfa_0(jjstateSet1 = jjstateSet2, jjstateSet2 = jjtmpStates);
         jjtmpStates = jjstateSet1;
         if (jjcurKind != 2147483647)
         {
            matchedToken.kind = jjcurKind;
            jjcurKind = 2147483647;
            jjmatchedPos = curPos++;
         }
         else
            curPos++;
      }

      if (matchedToken.kind != 2147483647)
      {
         if (jjmatchedPos + 1 < curPos)
            input_stream.backup(curPos - jjmatchedPos - 1);

         if ((jjtoToken[matchedToken.kind >> 6] &
             (1L << (matchedToken.kind & 077))) != 0L)
         {
            if ((matchedToken.image = jjstrLiteralImages[matchedToken.kind]) == null)
               matchedToken.image = input_stream.GetImage();
            matchedToken.beginLine = input_stream.getBeginLine();
            matchedToken.beginColumn = input_stream.getBeginColumn();
            matchedToken.endLine = input_stream.getEndLine();
            matchedToken.endColumn = input_stream.getEndColumn();
            return matchedToken;
         }
         else
         {
            continue EOFLoop;
         }
      }
      else
      {
         jjme.error_line = input_stream.getEndLine();
         jjme.error_column = input_stream.getEndColumn();
         input_stream.backup(1);
         jjme.error_after = curPos <= 1 ? "" : jjadd_escapes(input_stream.GetImage());
         jjme.LexicalError();

         throw new ParseError();
      }
    }
   }
   catch (java.io.IOException e)
   {
      switch(curLexState)
      {
         default : break;
      }
      if (matchedToken.kind != 2147483647 && matchedToken.kind != 0)
      {
         if (jjmatchedPos + 1 < curPos)
            input_stream.backup(curPos - jjmatchedPos - 1);

         if ((jjtoToken[matchedToken.kind >> 6] &
             (1L << (matchedToken.kind & 077))) != 0L)
         {
            if ((matchedToken.image = jjstrLiteralImages[matchedToken.kind]) == null)
               matchedToken.image = input_stream.GetImage();
            matchedToken.beginLine = input_stream.getBeginLine();
            matchedToken.beginColumn = input_stream.getBeginColumn();
            matchedToken.endLine = input_stream.getEndLine();
            matchedToken.endColumn = input_stream.getEndColumn();
            return matchedToken;
         }
         else
         {
            continue EOFLoop;
         }
      }

      jjme.error_line = input_stream.getEndLine();
      jjme.error_column = input_stream.getEndColumn();
      input_stream.backup(1);
      jjEOFSeen = true;
      jjme.error_after = curPos <= 1 ? "" : jjadd_escapes(input_stream.GetImage());
      jjme.LexicalError();

      throw new ParseError();
   }
  }
}

protected int error_line, error_column;
protected String error_after;
protected void LexicalError()
{
   System.err.println("Lexical error at line " +
        error_line + ", column " +
        error_column + ".  Encountered: " +
        (jjEOFSeen ? "<EOF>" : ("\"" + jjadd_escapes(String.valueOf(curChar)) + "\"") + " (" + (int)curChar + "), ") +
        "after : \"" + jjme.error_after + "\"");
}
}
